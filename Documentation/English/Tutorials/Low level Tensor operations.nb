Notebook[{
Cell[" ", "TutorialColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"1004c66d-ffe2-44bf-a634-75759bbf8e15"],

Cell[TextData[{
 ButtonBox["GeneralRelativityTensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["Low level Tensor operations",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/tutorial/Low level Tensor operations"]
}], "LinkTrail",ExpressionUUID->"14444bfa-e8c8-40f6-9fb0-2dc4141e0a24"],

Cell[BoxData[GridBox[{
   {Cell["LOW LEVEL TENSOR OPERATIONS TUTORIAL", "PacletNameCell",
     ExpressionUUID->"f5a2d699-2e93-474d-aea3-6113878aefdb"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Related Tutorials \[RightGuillemet]\"\>",
        StripOnInput->False], {
       RowBox[{"Introduction", " ", "to", " ", "GeneralRelativityTensors"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Introduction to \
GeneralRelativityTensors"], 
       RowBox[{"Introduction", " ", "to", " ", "Tensor", " ", "Curves"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Introduction to Tensor \
Curves"], 
       RowBox[{
       "Manipulating", " ", "and", " ", "differentiating", " ", "Tensors"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Manipulating and \
differentiating Tensors"], 
       RowBox[{"Caching", " ", "Tensor", " ", "values"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Caching Tensor values"], 
       RowBox[{"Examples", " ", "-", " ", 
        RowBox[{"Wave", " ", "equations"}]}]:>Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Examples - Wave equations"]},
       
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "0807932c-3428-4a3d-b72a-45485fde3e03"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->
         False], {"\<\"Go to GeneralRelativityTensors website\"\>":>
       FrontEndExecute[{
         NotebookLocate[{
           URL[None], None}]}], 
       Delimiter, "\<\"Go to wolfram Mathematica website\"\>":>
       FrontEndExecute[{
         NotebookLocate[{
           URL[
           "http://reference.wolfram.com/mathematica/guide/Mathematica.html"],
            None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "9afe6ee8-aefd-4543-b7b9-47e6e1017a33"]
    }], "AnchorBar",ExpressionUUID->"861103e7-1f85-4f6b-b7ab-0fd612dd0a8f"]}
  }]], "AnchorBarGrid",ExpressionUUID->"e9019125-642f-49e1-8dce-1214d8bee212"],

Cell[CellGroupData[{

Cell["GeneralRelativityTensors - Low-level Tensor operations", "Title",
 CellChangeTimes->{{3.741432711187791*^9, 3.741432717370063*^9}, {
  3.741437509709516*^9, 
  3.741437509801586*^9}},ExpressionUUID->"c5191fc9-cdb1-4959-b6ec-\
901f4f41d2d2"],

Cell["\<\
At times GeneralRelativityTensors may not include all the functionality you \
are looking for. In such times, you can always use low-level functions to \
modify Tensors \[OpenCurlyQuote]by hand\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.741432720467276*^9, 3.7414327539457808`*^9}, {
  3.7414372564712667`*^9, 
  3.741437260220236*^9}},ExpressionUUID->"61acad13-bf82-4ec8-b98c-\
70bbc29c68d1"],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"98ce99fb-052b-40fd-a333-c2a0616f1fb7"],

Cell[CellGroupData[{

Cell["Warning", "Section",
 CellChangeTimes->{{3.741437284685116*^9, 
  3.741437285774534*^9}},ExpressionUUID->"b2a82c23-1394-40c2-9f0d-\
07a5c2f8a869"],

Cell["\<\
The functions documented in this tutorial can change the form of a Tensor at \
a fundamental level. \
\>", "Item",
 CellChangeTimes->{{3.741437292510619*^9, 
  3.741437345364829*^9}},ExpressionUUID->"54eec8ff-e9ec-470e-b222-\
67c7fb7fe744"],

Cell["\<\
If care is not taken when using them, other features of \
GeneralRelativityTensors may not work as documented.\
\>", "Item",
 CellChangeTimes->{{3.741437292510619*^9, 3.7414373973435497`*^9}, {
  3.741437625904819*^9, 
  3.741437627363503*^9}},ExpressionUUID->"5c7a0ca4-3495-498e-9e59-\
b093b2c5f822"],

Cell[TextData[{
 "In most cases it is best to create Tensors, Metrics, and Curves with ",
 ButtonBox["ToTensor",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensor"],
 ", ",
 ButtonBox["ToMetric",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToMetric"],
 ", ",
 ButtonBox["ToCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToCurve"],
 ", ",
 ButtonBox["ToTensorFieldOnCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorFieldOnCurve"],
 " or ",
 ButtonBox["ToTensorOnCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorOnCurve"],
 "."
}], "Item",
 CellChangeTimes->{{3.741437292510619*^9, 3.74143748035354*^9}, {
  3.741437554976451*^9, 
  3.741437593826991*^9}},ExpressionUUID->"f537e638-337e-4c9b-a66a-\
b3df661ec1b1"],

Cell["\<\
It is only when the limited scope of these functions fail that the low-level \
functions shown here should be used.\
\>", "Item",
 CellChangeTimes->{{3.741437292510619*^9, 
  3.741437522154766*^9}},ExpressionUUID->"be7838db-698b-4e0b-a6ee-\
0876ba156ffd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The form of Tensors", "Section",
 CellChangeTimes->{{3.7414327984630947`*^9, 
  3.741432801653191*^9}},ExpressionUUID->"b6f8a36b-deed-4e97-86e2-\
641ac39bb46a"],

Cell[CellGroupData[{

Cell["\<\
Consider the built in Tensor that is the Kerr metric in Boyer-Lindquist \
coordinates.\
\>", "Item",
 CellChangeTimes->{{3.741432806236313*^9, 
  3.741432825264573*^9}},ExpressionUUID->"4175dbc9-084c-4022-91ec-\
ab7ec555b65d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gK", "=", 
  RowBox[{"ToMetric", "[", "\"\<Kerr\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.741432833528884*^9, 3.74143283950071*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"63503f45-764d-4b7d-bf9e-f1bd6bcff2c2"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"71e3a45d-128c-49df-9766-ccfb4a8369b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Underneath it is just a Sequence of Rules wrapped in the Head Tensor.\
\>", "Item",
 CellChangeTimes->{{3.7414329108060017`*^9, 
  3.741432936951544*^9}},ExpressionUUID->"1de43f36-78fc-43b1-9b0f-\
6a17e3a451c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "@@", "gK"}]], "Input",
 CellChangeTimes->{{3.741432941481826*^9, 3.741432943531322*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"37b096a5-3c26-454e-b1e6-999438938359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"AbstractQ\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"Coordinates\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], ",", 
   RowBox[{"\<\"Curve\"\>", "\[Rule]", "Undefined"}], ",", 
   RowBox[{"\<\"CurveParameter\"\>", "\[Rule]", "Undefined"}], ",", 
   RowBox[{"\<\"CurveQ\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"DisplayName\"\>", "\[Rule]", "\<\"g\"\>"}], ",", 
   RowBox[{"\<\"Indices\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Alpha]"}], ",", 
      RowBox[{"-", "\[Beta]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Metric\"\>", "\[Rule]", "\<\"Self\"\>"}], ",", 
   RowBox[{"\<\"MetricQ\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"KerrMetric\"\>"}], ",", 
   RowBox[{"\<\"PossibleIndices\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", "\[Delta]", ",", 
      "\[CurlyEpsilon]", ",", "\[Zeta]", ",", "\[Eta]", ",", "\[Iota]", ",", 
      "\[Kappa]", ",", "\[Lambda]", ",", "\[Mu]", ",", "\[Nu]", ",", "\[Xi]", 
      ",", "\[Omicron]", ",", "\[Rho]", ",", "\[Sigma]", ",", "\[FinalSigma]",
       ",", "\[Upsilon]", ",", "\[CurlyPhi]", ",", "\[Psi]", ",", 
      "\[Omega]"}], "}"}]}], ",", 
   RowBox[{"\<\"Tetrad\"\>", "\[Rule]", "Undefined"}], ",", 
   RowBox[{"\<\"Values\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          RowBox[{"2", " ", "M", " ", "r"}], "-", 
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", 
        "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"2", " ", "M", " ", "r"}], "+", 
          SuperscriptBox["r", "2"]}]], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ",", "0", 
        ",", "0", ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "-", 
               RowBox[{"2", " ", "M", " ", "r"}], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], 
     "}"}]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"307277f5-2278-4368-9923-17db0226dd10"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We can change the Values (the RHS) of each of these Rules \
\[OpenCurlyQuote]manually\[CloseCurlyQuote] by using the function \
SetTensorKeyValue.\
\>", "Item",
 CellChangeTimes->{{3.7414329746846237`*^9, 
  3.741433009024694*^9}},ExpressionUUID->"bc13fafd-26b2-483f-a1c8-\
cf4a45008b79"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SetTensorKeyValue",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetTensorKeyValue"], 
     "[", 
     StyleBox[
      RowBox[{"t", ",", "key", ",", "value"}], "TI"], "]"}], 
    RowBox[{
     RowBox[{"The", " ", "Tensor", " ", 
      StyleBox["t",
       FontFamily->"Times",
       FontWeight->"Regular",
       FontSlant->"Italic"], 
      StyleBox[" ",
       FontFamily->"Times",
       FontWeight->"Regular",
       FontSlant->"Italic"], "with", " ", "the", " ", "appropriate", " ", 
      "Rule", " ", "changed", " ", "to", " ", 
      StyleBox["key",
       FontFamily->"Times",
       FontWeight->"Regular",
       FontSlant->"Italic"]}], "\[Rule]", 
     StyleBox["value",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.741433236407153*^9, 3.741433288827405*^9}, 
   3.741433327031437*^9, {3.741440300239574*^9, 3.74144030279537*^9}, {
   3.741440737214161*^9, 3.741440827870833*^9}},
 CellID->340746825,ExpressionUUID->"bf020870-594e-41ae-8c9d-eaac46dc7251"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here we change the value of \[OpenCurlyDoubleQuote]DisplayName\
\[CloseCurlyDoubleQuote]:", "Item",
 CellChangeTimes->{{3.741433380610489*^9, 
  3.741433401777391*^9}},ExpressionUUID->"81a5c525-5952-4dc3-9775-\
7c40bca678b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKNew", "=", 
  RowBox[{"SetTensorDisplayName", "[", 
   RowBox[{"gK", ",", "\"\<gKerr\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.74143340318299*^9, 3.7414334345162992`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"36a67983-1ad5-4512-bfd4-3745577daba2"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["gKerr", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"e60e5bdb-b647-4446-a1d8-5f4084f43286"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This does not change the TensorDisplayName of gK", "Item",
 CellChangeTimes->{{3.741433416418317*^9, 
  3.741433446645015*^9}},ExpressionUUID->"bbd09140-57ae-40d6-baff-\
22fe7d883b40"],

Cell[CellGroupData[{

Cell[BoxData["gK"], "Input",
 CellChangeTimes->{{3.741433447677436*^9, 3.741433447902773*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e6c2469c-7151-47c9-988f-ed63d948bc37"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[5]=",ExpressionUUID->"62f45646-bce3-4fda-b1d4-f3f70a549ea2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Built in \[OpenCurlyDoubleQuote]setter\[CloseCurlyDoubleQuote] \
functions", "Section",
 CellChangeTimes->{{3.7414334648878393`*^9, 
  3.741433476200902*^9}},ExpressionUUID->"27ee9b1c-2fdd-4c9c-9053-\
a9cf4f663930"],

Cell[CellGroupData[{

Cell["Available functions", "Subsection",
 CellChangeTimes->{{3.7414379204338627`*^9, 
  3.741437923752606*^9}},ExpressionUUID->"d5c5a3b6-cf02-4ba4-bef8-\
ad2022c9b785"],

Cell[CellGroupData[{

Cell["\<\
Rather than use SetTensorDisplayName, there are built-in functions that can \
be used for each Tensor key-value pair.\
\>", "Item",
 CellChangeTimes->{{3.741433481109542*^9, 
  3.741433540129035*^9}},ExpressionUUID->"dbfecaf5-20ab-4ee9-bf56-\
9b38ffc3dac2"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SetTensorName",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetTensorName"], "[", 
     StyleBox[
      RowBox[{"t", ",", "n"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "TensorName", " ", 
     "changed", " ", "to", " ", 
     StyleBox["n",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetTensorDisplayName",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetTensorDisplayName"],
      "[", 
     StyleBox[
      RowBox[{"t", ",", "n"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "TensorDisplayName",
      " ", "changed", " ", "to", " ", 
     StyleBox["n",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetTensorValues",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetTensorValues"], "[", 
     StyleBox[
      RowBox[{"t", ",", "vals"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "internal", " ", 
     "RawTensorValues", " ", "changed", " ", "to", " ", 
     StyleBox["vals",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetMetric",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetMetric"], "[", 
     StyleBox[
      RowBox[{"t", ",", "m"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "metric", " ", 
     "changed", " ", "to", " ", 
     StyleBox["m",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetMetricQ",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetMetricQ"], "[", 
     StyleBox[
      RowBox[{"t", ",", "bool"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "MetricQ", " ", 
     "flag", " ", "set", " ", "to", " ", 
     StyleBox["bool",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetCurve",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetCurve"], "[", 
     StyleBox[
      RowBox[{"t", ",", "c"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "Curve", " ", "set",
      " ", "to", " ", 
     StyleBox["c",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetCurveParameter",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetCurveParameter"], 
     "[", 
     StyleBox[
      RowBox[{"t", ",", "param"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "CurveParameter", 
     " ", "set", " ", "to", " ", 
     StyleBox["param",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetCurveQ",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetCurveQ"], "[", 
     StyleBox[
      RowBox[{"t", ",", "bool"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "CurveQ", " ", 
     "flag", " ", "set", " ", "to", " ", 
     StyleBox["bool",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetCoordinates",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetCoordinates"], "[", 
     
     StyleBox[
      RowBox[{"t", ",", "coords"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "Coordinates", " ", 
     "set", " ", "to", " ", 
     StyleBox["coords",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetIndices",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetIndices"], "[", 
     StyleBox[
      RowBox[{"t", ",", "inds"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "Indices", " ", 
     "set", " ", "to", " ", 
     StyleBox["inds",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetPossibleIndices",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetPossibleIndices"], 
     "[", 
     StyleBox[
      RowBox[{"t", ",", "posInds"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "PossibleIndices", 
     " ", "set", " ", "to", " ", 
     StyleBox["posInds",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetDimensions"], 
     RowBox[{
      ButtonBox["SetSpacetimeDimensions",
       BaseStyle->"Link",
       ButtonData->
        "paclet:GeneralRelativityTensors/ref/SetSpacetimeDimensions"], "[", 
      StyleBox[
       RowBox[{"t", ",", "dims"}], "TI"], "]"}]}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", 
     "SpacetimeDimensions", " ", "set", " ", "to", " ", 
     StyleBox["dims",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.74143355616121*^9, 3.7414338155569077`*^9}, {
  3.741433882527974*^9, 3.741434043352695*^9}, {3.741434093103671*^9, 
  3.741434133151382*^9}, {3.741434214183885*^9, 3.741434332640851*^9}, {
  3.742224213323325*^9, 3.742224220580921*^9}, {3.74222646437206*^9, 
  3.742226468792856*^9}, {3.7422265035400743`*^9, 3.742226538719563*^9}},
 CellID->1668101314,ExpressionUUID->"1c062944-ebc2-4e18-ae2a-cf66beaf9db9"]
}, Open  ]],

Cell[TextData[{
 "When Tensors are created with ",
 ButtonBox["ToTensor",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensor"],
 ", there are many checks run to check the consistency of the input."
}], "Item",
 CellChangeTimes->{{3.741438983196644*^9, 3.741439042083482*^9}, 
   3.741439100303479*^9},ExpressionUUID->"3a20fbda-6b90-4655-9f93-\
e97b01e9fd4e"],

Cell["\<\
For instance, the number of SpacetimeDimensions of the given Metric must be \
consistent with sizes of Lists of values.\
\>", "Item",
 CellChangeTimes->{{3.741438983196644*^9, 3.741439088165072*^9}, {
  3.741440314958282*^9, 3.741440318042267*^9}, {3.742224231794804*^9, 
  3.74222423500587*^9}},ExpressionUUID->"d9440606-7988-46ad-9e7a-\
d0ae2a6fed37"],

Cell["\<\
By default the functions listed here also perform those checks, which is \
usually a good thing.\
\>", "Item",
 CellChangeTimes->{{3.741438983196644*^9, 
  3.74143912133727*^9}},ExpressionUUID->"688ae732-338b-4b73-b305-\
e986231353ea"],

Cell["\<\
It is possible to live dangerously, though, and not perform consistency \
checks with the Option IgnoreWarnings \[Rule] True.\
\>", "Item",
 CellChangeTimes->{{3.741438983196644*^9, 
  3.741439157248557*^9}},ExpressionUUID->"6ba99834-e920-47c6-b032-\
84318eb99fe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Names", "Subsection",
 CellChangeTimes->{{3.741437930507887*^9, 
  3.74143793104062*^9}},ExpressionUUID->"460450f9-117b-4e9e-9d2d-\
f87c0f986ea0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gK2", "=", 
  RowBox[{"SetTensorName", "[", 
   RowBox[{"gK", ",", "\"\<Kerr2\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gK2", "//", "TensorName"}]}], "Input",
 CellChangeTimes->{{3.74143794039433*^9, 3.741437976619997*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"92092dbb-81b7-41b3-ad38-68e0c88d5c80"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"d7c3bf59-fe37-4077-aa33-a5f4b352c8e4"],

Cell[BoxData["\<\"Kerr2\"\>"], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"d4d95608-9568-424b-bded-17a02f529dcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetTensorDisplayName", "[", 
  RowBox[{"gK", ",", "\"\<\[ScriptG]\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.74143794039433*^9, 3.741438014151698*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b0d55dd3-6705-4c16-bce3-26e69249c8c8"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[ScriptG]", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"0fb22c5b-478c-4543-a428-5f4c0c33c418"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Values", "Subsection",
 CellChangeTimes->{{3.7414380240928087`*^9, 
  3.7414380246398067`*^9}},ExpressionUUID->"36fec6c2-1e00-4b8c-9ebf-\
4e251923b3ba"],

Cell[CellGroupData[{

Cell["\<\
When SetTensorValues is called, all cached values associated with that Tensor \
are cleared.\
\>", "Item",
 CellChangeTimes->{{3.741438083775983*^9, 
  3.7414381191951*^9}},ExpressionUUID->"968db973-b40c-469e-95d0-aa802dd394d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TensorValues", "[", "gK", "]"}]], "Input",
 CellChangeTimes->{{3.74143802858315*^9, 3.741438036811097*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b4c44a55-0659-410c-b789-e23f3eb3eda4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "+", 
       RowBox[{"2", " ", "M", " ", "r"}], "-", 
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", "0",
      ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], "-", 
       RowBox[{"2", " ", "M", " ", "r"}], "+", 
       SuperscriptBox["r", "2"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["r", "2"], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ",", "0", ",", 
     "0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "-", 
            RowBox[{"2", " ", "M", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"053714f6-766f-4fcd-9c83-d7346896e72b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gK2s", "=", 
  RowBox[{"SetTensorValues", "[", 
   RowBox[{"gK", ",", 
    RowBox[{"Table", "[", 
     RowBox[{"2", ",", 
      RowBox[{"{", "4", "}"}], ",", 
      RowBox[{"{", "4", "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7414380428389387`*^9, 3.741438076669167*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"1de940f0-a213-4988-a748-0c3aad4ba3c4"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[10]=",ExpressionUUID->"aea15e29-585b-49a4-abae-2908c785fdc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RawTensorValues", "[", "gK2s", "]"}]], "Input",
 CellChangeTimes->{{3.741438064210438*^9, 3.74143807547225*^9}, {
  3.741438515950385*^9, 3.741438516231625*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"50af9d8a-195e-4886-a3bc-6d87039cfea6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[11]=",ExpressionUUID->"f5b2a53a-b246-40db-8d86-cab9b53fd748"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metrics", "Subsection",
 CellChangeTimes->{{3.741438125727892*^9, 
  3.7414381267473993`*^9}},ExpressionUUID->"de80cd53-5462-4764-852d-\
c7ec10f768d9"],

Cell[CellGroupData[{

Cell["SetMetric", "Subsubsection",
 CellChangeTimes->{{3.741438226448111*^9, 
  3.741438228468544*^9}},ExpressionUUID->"1e7ba457-e8fb-4dad-989e-\
4eb134d44d4c"],

Cell[CellGroupData[{

Cell["\<\
In this case, it doesn\[CloseCurlyQuote]t make much sense to change the \
metric, but it is possible.\
\>", "Item",
 CellChangeTimes->{{3.741438159334207*^9, 3.7414381742312202`*^9}, 
   3.741438221954287*^9},ExpressionUUID->"c61ab093-5bda-40a3-9d79-\
c5aec09c0da2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ARN", "=", 
  RowBox[{
  "MaxwellPotential", "[", "\"\<ReissnerNordstrom\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.741438141018858*^9, 3.741438151387472*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"1e329133-4663-4668-89c5-adbaf62c82b9"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["A", "\[Alpha]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[12]=",ExpressionUUID->"e2481bea-bbac-4716-8e48-689b2be7c408"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Metric", "[", "ARN", "]"}], "//", "TensorName"}]], "Input",
 CellChangeTimes->{3.7414382103570633`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"1105a2b5-5c8c-412c-8071-31bd3a80b42d"],

Cell[BoxData["\<\"ReissnerNordstromMetric\"\>"], "Output",
 CellLabel->
  "Out[13]=",ExpressionUUID->"7ee757f5-e2e7-424b-9fad-e4aa4eb04ef9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AS", "=", 
  RowBox[{"SetMetric", "[", 
   RowBox[{"ARN", ",", 
    RowBox[{"ToMetric", "[", "\"\<Schwarzschild\>\"", "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7414381549229307`*^9, 3.741438192072877*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"df3c7210-0e0e-4be5-a644-50a96086927a"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["A", "\[Alpha]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[14]=",ExpressionUUID->"21975b10-e773-469d-82e2-33731c6efe8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Metric", "[", "AS", "]"}], "//", "TensorName"}]], "Input",
 CellChangeTimes->{{3.741438194969963*^9, 3.74143820069875*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"24c4a37f-f40e-4f30-80e9-fa282377d717"],

Cell[BoxData["\<\"SchwarzschildMetric\"\>"], "Output",
 CellLabel->
  "Out[15]=",ExpressionUUID->"a31aef59-6b47-406d-a8ad-b50b42a83e32"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SetMetricQ", "Subsubsection",
 CellChangeTimes->{{3.741438231486874*^9, 
  3.7414382332653437`*^9}},ExpressionUUID->"e161cace-060c-4bfd-8b06-\
8f8073d1f9fd"],

Cell[CellGroupData[{

Cell["\<\
The flag MetricQ stores whether a Tensor is a metric. This can be turned on \
and off.\
\>", "Item",
 CellChangeTimes->{{3.741438236345681*^9, 
  3.741438272083334*^9}},ExpressionUUID->"1ec7d99f-3ee2-43c5-9c58-\
56cbe8e709ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MetricQ", "[", "gK", "]"}]], "Input",
 CellChangeTimes->{{3.741438272922915*^9, 3.7414382782164927`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d310fe3f-5d53-4b55-b1f2-d880d3578a11"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[16]=",ExpressionUUID->"447db668-bebe-41fb-82a0-7c15a859f35f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKFalse", "=", 
  RowBox[{"SetMetricQ", "[", 
   RowBox[{"gK", ",", "False"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741438279952745*^9, 3.7414382934247932`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"65cfecb4-0277-401d-8f80-7f0a7d0891fb"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[17]=",ExpressionUUID->"12101c8a-5fcb-447e-bd15-19d649fe4612"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MetricQ", "[", "gKFalse", "]"}]], "Input",
 CellChangeTimes->{{3.7414382954551573`*^9, 3.741438306591744*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"78eeab41-60e6-4ef2-9fa9-5a89751342bf"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[18]=",ExpressionUUID->"9e9bfef9-07d4-40f5-b7cc-d54fa00876ee"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Curves", "Subsection",
 CellChangeTimes->{{3.7414383112052803`*^9, 
  3.741438311933289*^9}},ExpressionUUID->"46757182-2148-44b1-ab72-\
ccc7c18ca32d"],

Cell[TextData[{
 "There is a great deal of subtlety about whether a Tensor ",
 StyleBox["is",
  FontSlant->"Italic"],
 " a Curve, ",
 StyleBox["has",
  FontSlant->"Italic"],
 " an associated Curve, or is ",
 StyleBox["on ",
  FontSlant->"Italic"],
 "a Curve."
}], "Item",
 CellChangeTimes->{{3.74143832500525*^9, 
  3.741438364611033*^9}},ExpressionUUID->"0860a726-09e2-4fba-b247-\
ea32a31e9452"],

Cell[TextData[{
 "For this reason, it is almost always preferable to use  ",
 ButtonBox["ToCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToCurve"],
 ", ",
 ButtonBox["ToTensorFieldOnCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorFieldOnCurve"],
 " or ",
 ButtonBox["ToTensorOnCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorOnCurve"],
 "."
}], "Item",
 CellChangeTimes->{{3.74143832500525*^9, 
  3.741438391372473*^9}},ExpressionUUID->"1fb40f61-0aac-4a56-9203-\
0bdf513db75e"],

Cell["\<\
Nonetheless, it is possible to set the internal curve key-values directly.\
\>", "Item",
 CellChangeTimes->{{3.74143832500525*^9, 
  3.741438413036545*^9}},ExpressionUUID->"59f5dacc-7a99-4ce6-acc6-\
ba829d7c67f9"],

Cell[CellGroupData[{

Cell["SetCurve", "Subsubsection",
 CellChangeTimes->{{3.7414384193671293`*^9, 
  3.741438421342548*^9}},ExpressionUUID->"e02a49b0-cfdc-4862-8200-\
29a0fc61bcec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1", " ", "=", " ", 
  RowBox[{"ToCurve", "[", 
   RowBox[{"\"\<x1\>\"", ",", " ", "gK", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "\[Chi]", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", " ", "M"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"e", " ", 
          RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}]}], ",", " ", 
      RowBox[{"\[Pi]", "/", "2"}], ",", " ", 
      RowBox[{"\[Phi]", "[", "\[Chi]", "]"}]}], "}"}], ",", " ", "\[Chi]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.741438431881531*^9, 3.7414384543532677`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"1667af89-ec41-47cf-8d08-b159c48ef5b4"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Chi]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->
  "Out[19]=",ExpressionUUID->"64dda5a5-203b-4274-b447-b339e0b6efce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKC", " ", "=", " ", 
  RowBox[{"SetCurve", "[", 
   RowBox[{"gK", ",", " ", "c1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741438431881531*^9, 3.7414384552672453`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"abf3420b-6c50-4cf8-bdb6-52a62cef4c2d"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[20]=",ExpressionUUID->"8eef3a83-a7ae-48a6-b052-3fa0b2bf0d56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curve", "[", "gKC", "]"}]], "Input",
 CellChangeTimes->{{3.741438431881531*^9, 3.7414384552672453`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9dee3ed5-9f58-4bc6-a378-57fbda4363b4"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Chi]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->
  "Out[21]=",ExpressionUUID->"2a71fe6e-c3d7-476c-be4e-a5e26992db76"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SetCurveParameter", "Subsubsection",
 CellChangeTimes->{{3.741438473016821*^9, 
  3.741438475520331*^9}},ExpressionUUID->"0dbdd9c1-cab1-436a-8b75-\
e2d4f33cf074"],

Cell[CellGroupData[{

Cell["\<\
In this case it does not make much sense to change the CurveParameter, but it \
could be useful if SetTensorValues were also used.\
\>", "Item",
 CellChangeTimes->{{3.74143848132654*^9, 
  3.741438510898444*^9}},ExpressionUUID->"9b371408-e1ec-4dfa-8f15-\
6213c90544da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", " ", "=", " ", 
  RowBox[{"SetCurveParameter", "[", 
   RowBox[{"c1", ",", " ", "\[Tau]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741438530807857*^9, 3.741438539459588*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"23a9a627-e801-463d-a7fe-3ef20aa7ed54"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Tau]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->
  "Out[22]=",ExpressionUUID->"6a8490fc-99bf-4e61-8c7b-50ce8a5f3421"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurveParameter", "[", "c2", "]"}]], "Input",
 CellChangeTimes->{{3.741438530807857*^9, 3.7414385454326773`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"0b57bebe-ac80-4953-988a-1801dd2d0677"],

Cell[BoxData["\[Tau]"], "Output",
 CellLabel->
  "Out[23]=",ExpressionUUID->"251eb199-5ee6-4bd5-9804-54250d22057d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SetCurveQ", "Subsubsection",
 CellChangeTimes->{{3.741438231486874*^9, 3.7414382332653437`*^9}, {
  3.741438566989266*^9, 
  3.7414385676294813`*^9}},ExpressionUUID->"b0645ed9-8b43-4d7f-88ed-\
4fbfb7c63c68"],

Cell[CellGroupData[{

Cell["\<\
The flag CurveQ stores whether a Tensor is a Curve. This can be turned on and \
off.\
\>", "Item",
 CellChangeTimes->{{3.741438236345681*^9, 3.741438272083334*^9}, {
  3.7414385694166317`*^9, 
  3.741438571298525*^9}},ExpressionUUID->"ed9c7726-f9c4-42da-8982-\
6aa3cc4f996d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurveQ", "[", "c2", "]"}]], "Input",
 CellChangeTimes->{{3.7414386255374107`*^9, 3.741438627830515*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"5a05719f-26cd-4ac6-88bc-d64d7723059a"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[24]=",ExpressionUUID->"d1ad60e6-5a00-42ce-b12c-ca81f9093055"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c3", " ", "=", " ", 
  RowBox[{"SetCurveQ", "[", 
   RowBox[{"c2", ",", "False"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741438590377816*^9, 3.741438629156722*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f24e7192-982a-4b24-861e-1e900501d0c2"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Tau]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->
  "Out[25]=",ExpressionUUID->"5fcbe969-c8a1-4ba6-826d-5cc9d3f9086c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurveQ", "[", "c3", "]"}]], "Input",
 CellChangeTimes->{{3.741438590377816*^9, 3.741438620357032*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"cceeeeeb-0e31-4e27-ab64-8be8d97af203"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[26]=",ExpressionUUID->"9ed7b3b6-8978-4d70-8c6a-29b498ebcc5d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coordinates, Indices, SpacetimeDimensions", "Subsection",
 CellChangeTimes->{{3.7414389541900682`*^9, 3.741438960780396*^9}, 
   3.742224242033092*^9},ExpressionUUID->"1adb3fc5-8081-441f-a0de-\
6cdecce1a583"],

Cell[CellGroupData[{

Cell["Coordinates", "Subsubsection",
 CellChangeTimes->{{3.7414395530146503`*^9, 
  3.741439555211638*^9}},ExpressionUUID->"ab08a234-6ef0-4777-a86f-\
7c72389e35e5"],

Cell[CellGroupData[{

Cell["We can change the List of Coordinates of a Tensor", "Item",
 CellChangeTimes->{{3.741439178226069*^9, 
  3.7414391948247337`*^9}},ExpressionUUID->"ed7ded6d-d2ab-4595-afad-\
7fc26534af4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gK", "//", "Coordinates"}]], "Input",
 CellChangeTimes->{{3.741439531175969*^9, 3.741439539893882*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"f2379841-56fd-4c6e-a639-44a9d90385e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]], "Output",
 CellLabel->
  "Out[27]=",ExpressionUUID->"d7418296-c4b3-4743-a2b0-d07f7255bc1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKCart", "=", 
  RowBox[{"SetCoordinates", "[", 
   RowBox[{"gK", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741439502612321*^9, 3.7414395177471027`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"1f14361d-8368-4436-8be9-b2d2997f20ff"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[28]=",ExpressionUUID->"2f2bff6b-a15f-4fb7-9b26-75455e5c684a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKCart", "//", "Coordinates"}]], "Input",
 CellChangeTimes->{{3.7414395435022717`*^9, 3.741439547311861*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"e67e3c6e-0d2c-4bd0-80e9-591192acbdd7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellLabel->
  "Out[29]=",ExpressionUUID->"9adc604f-b8f7-4e47-9749-fc3b93798b15"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Indices and PossibleIndices", "Subsubsection",
 CellChangeTimes->{{3.741439560483038*^9, 
  3.741439564741296*^9}},ExpressionUUID->"e4396bfe-2ef0-42d4-90a1-\
8f01cba391bd"],

Cell[CellGroupData[{

Cell["\<\
These two must be consistent, so without IgnoreWarnings \[Rule] True it fails.\
\>", "Item",
 CellChangeTimes->{{3.741439569230052*^9, 3.7414395731805696`*^9}, {
  3.741439607116716*^9, 
  3.74143961830223*^9}},ExpressionUUID->"2cf1ae9d-02dc-4a77-bcea-\
d22ad262ae5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetIndices", "[", 
  RowBox[{"gK", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741439620596262*^9, 3.7414396294792337`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d7cdf0d9-8efe-432a-b077-ebebd4cd00bf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Given Indices \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], 
   "\[InvisibleSpace]", "\<\" are not all found in List of with \
PossibleIndices \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", "\[Delta]", ",", 
     "\[CurlyEpsilon]", ",", "\[Zeta]", ",", "\[Eta]", ",", "\[Iota]", ",", 
     "\[Kappa]", ",", "\[Lambda]", ",", "\[Mu]", ",", "\[Nu]", ",", "\[Xi]", 
     ",", "\[Omicron]", ",", "\[Rho]", ",", "\[Sigma]", ",", "\[FinalSigma]", 
     ",", "\[Upsilon]", ",", "\[CurlyPhi]", ",", "\[Psi]", ",", "\[Omega]"}], 
    "}"}]}],
  SequenceForm[
  "Given Indices ", {Temp`a, Temp`b}, 
   " are not all found in List of with PossibleIndices ", {
   Temp`\[Alpha], Temp`\[Beta], Temp`\[Gamma], Temp`\[Delta], 
    Temp`\[CurlyEpsilon], Temp`\[Zeta], Temp`\[Eta], Temp`\[Iota], 
    Temp`\[Kappa], Temp`\[Lambda], Temp`\[Mu], Temp`\[Nu], Temp`\[Xi], 
    Temp`\[Omicron], Temp`\[Rho], Temp`\[Sigma], Temp`\[FinalSigma], 
    Temp`\[Upsilon], Temp`\[CurlyPhi], Temp`\[Psi], Temp`\[Omega]}],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"7c3bf134-4a74-4a0a-be94-c824246f4dac"],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->
  "Out[30]=",ExpressionUUID->"73c3740c-712c-443e-9d60-40f6d641e6cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKLatin1", "=", 
  RowBox[{"SetIndices", "[", 
   RowBox[{"gK", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "a"}], ",", 
      RowBox[{"-", "b"}]}], "}"}], ",", 
    RowBox[{"IgnoreWarnings", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741439634129684*^9, 3.7414396408570023`*^9}, {
  3.741439726865614*^9, 3.741439729857888*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"85ff6054-99e4-459b-9994-41268c6e3f62"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "ab", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[31]=",ExpressionUUID->"0df7bdb2-5e03-4253-bad0-b6a5a9c53095"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Still, normal things don\[CloseCurlyQuote]t work:", "Item",
 CellChangeTimes->{{3.74143966694081*^9, 
  3.741439677649122*^9}},ExpressionUUID->"c9290585-a1ca-4e43-a9a9-\
a8c584c76add"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKLatin1", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.7414396593859653`*^9, 3.741439661408352*^9}, 
   3.741439732955947*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"4e6fc138-8e8e-4131-9cfa-a1dff97ef7d9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The given indices \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], 
   "\[InvisibleSpace]", "\<\" are not entirely in the List of \
PossibleIndices, or Coordinates of \"\>", "\[InvisibleSpace]", 
   TagBox[
    SubsuperscriptBox["g", "ab", ""],
    DisplayForm], 
   "\[InvisibleSpace]", "\<\", and they are not not all Patterns.\"\>"}],
  SequenceForm[
  "The given indices ", {Temp`a, Temp`b}, 
   " are not entirely in the List of PossibleIndices, or Coordinates of ", 
   GeneralRelativityTensors`TensorDefinitions`Tensor[{
    "AbstractQ" -> False, 
     "Coordinates" -> {Temp`t, Temp`r, Temp`\[Theta], Temp`\[Phi]}, "Curve" -> 
     Undefined, "CurveParameter" -> Undefined, "CurveQ" -> False, 
     "Dimensions" -> 4, "DisplayName" -> "g", "Indices" -> {-Temp`a, -Temp`b},
      "Metric" -> "Self", "MetricQ" -> True, "Name" -> "KerrMetric", 
     "PossibleIndices" -> {
      Temp`\[Alpha], Temp`\[Beta], Temp`\[Gamma], Temp`\[Delta], 
       Temp`\[CurlyEpsilon], Temp`\[Zeta], Temp`\[Eta], Temp`\[Iota], 
       Temp`\[Kappa], Temp`\[Lambda], Temp`\[Mu], Temp`\[Nu], Temp`\[Xi], 
       Temp`\[Omicron], Temp`\[Rho], Temp`\[Sigma], Temp`\[FinalSigma], 
       Temp`\[Upsilon], Temp`\[CurlyPhi], Temp`\[Psi], Temp`\[Omega]}, 
     "Tetrad" -> Undefined, 
     "Values" -> {{(Temp`r^2 + Temp`a^2 Cos[Temp`\[Theta]]^2)^(-1) (-Temp`a^2 + 
         2 Temp`M Temp`r - Temp`r^2 + Temp`a^2 Sin[Temp`\[Theta]]^2), 0, 
        0, (-2) Temp`a Temp`M 
        Temp`r (Temp`r^2 + Temp`a^2 Cos[Temp`\[Theta]]^2)^(-1) 
        Sin[Temp`\[Theta]]^2}, {
       0, (Temp`a^2 - 2 Temp`M Temp`r + Temp`r^2)^(-1) (Temp`r^2 + 
         Temp`a^2 Cos[Temp`\[Theta]]^2), 0, 0}, {
       0, 0, Temp`r^2 + Temp`a^2 Cos[Temp`\[Theta]]^2, 0}, {(-2) Temp`a 
        Temp`M Temp`r (Temp`r^2 + Temp`a^2 Cos[Temp`\[Theta]]^2)^(-1) 
        Sin[Temp`\[Theta]]^2, 0, 
        0, (Temp`r^2 + Temp`a^2 Cos[Temp`\[Theta]]^2)^(-1) 
        Sin[Temp`\[Theta]]^2 ((Temp`a^2 + Temp`r^2)^2 - 
         Temp`a^2 (Temp`a^2 - 2 Temp`M Temp`r + Temp`r^2) 
         Sin[Temp`\[Theta]]^2)}}}], ", and they are not not all Patterns."],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"2acf24ad-e22b-42fa-92a9-26afd065bbd8"],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->
  "Out[32]=",ExpressionUUID->"de534487-6e1d-414b-b56d-2db8ffe4cd53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["So, we have to also set PossibleIndices", "Item",
 CellChangeTimes->{{3.741439680444315*^9, 
  3.7414397214144363`*^9}},ExpressionUUID->"c32005dc-7ca9-4544-9fbd-\
fd77350aad46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKLatin2", "=", 
  RowBox[{"SetPossibleIndices", "[", 
   RowBox[{"gKLatin1", ",", 
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
      "h", ",", "i", ",", "j"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741439737014475*^9, 3.7414397664472427`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"d1fda40d-1d5e-4b2b-a106-dc18bb281803"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "ab", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[33]=",ExpressionUUID->"5a4d6f74-0406-45d0-91e6-1921fdeea6ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKLatin2", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.741439769519836*^9, 3.741439770417701*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"d3638cca-7864-43fb-8d09-f95920b42630"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "", "ab"],
  DisplayForm]], "Output",
 CellLabel->
  "Out[34]=",ExpressionUUID->"5e09059c-7160-478f-a170-874a224c1b87"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SpacetimeDimensions", "Subsubsection",
 CellChangeTimes->{{3.741439778981772*^9, 3.741439780272984*^9}, 
   3.742224244375635*^9},ExpressionUUID->"f742013f-cb40-48f6-89cd-\
930eec483412"],

Cell[CellGroupData[{

Cell["\<\
This should only be changed if Coordinates and TensorValues are changed \
consistently.\
\>", "Item",
 CellChangeTimes->{{3.741439787899921*^9, 
  3.741439809012292*^9}},ExpressionUUID->"0636a418-7fbc-4ebd-a852-\
1c0d5f881860"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetSpacetimeDimensions", "[", 
  RowBox[{"gK", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.74143981140313*^9, 3.74143981575712*^9}, 
   3.742224247632516*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"40040743-7bc1-4c3f-aba2-c2fb04158742"],

Cell[BoxData["\<\"The number of coordinates given does not match the number \
of SpacetimeDimensions.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"e066afdf-38df-455c-8f8c-80a9be91e620"],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->
  "Out[35]=",ExpressionUUID->"e2384262-9417-44c1-b00d-456673b34027"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Still, it is possible:", "Item",
 CellChangeTimes->{{3.741439821958179*^9, 
  3.741439833977659*^9}},ExpressionUUID->"259830ff-73ff-422e-8f8d-\
97d46ff6b118"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"3", ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"2aab3d4d-c582-4d9e-8362-38f83364cef2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[36]=",ExpressionUUID->"88f8f788-804d-4228-88d5-b1847cfc5b88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gK3", "=", 
  RowBox[{"SetTensorValues", "[", 
   RowBox[{
    RowBox[{"SetCoordinates", "[", 
     RowBox[{
      RowBox[{"SetSpacetimeDimensions", "[", 
       RowBox[{"gK", ",", "3", ",", 
        RowBox[{"IgnoreWarnings", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "x", ",", "y"}], "}"}], ",", 
      RowBox[{"IgnoreWarnings", "\[Rule]", "True"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{"3", ",", 
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741439841565044*^9, 3.741439924267015*^9}, 
   3.742224254457437*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"fc06183f-9430-464f-bce0-b94d8e6a1adf"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[37]=",ExpressionUUID->"e9e358c7-9809-4117-ad5f-7f8c74005379"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SpacetimeDimensions", "[", "gK3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Coordinates", "[", "gK3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"TensorValues", "[", "gK3", "]"}]}], "Input",
 CellChangeTimes->{{3.741439929401616*^9, 3.741439941322493*^9}, 
   3.742224256265052*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"b83ece8f-47f8-4281-a36a-d7fb6c9d561b"],

Cell[BoxData["3"], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"6caaa546-64d5-4884-8586-82c344379cec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "x", ",", "y"}], "}"}]], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"40fbaccb-8bf9-479b-ac52-4725fb2bcce1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[40]=",ExpressionUUID->"f066f35e-5dde-49d9-a35e-f277c3a12008"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "RELATED TUTORIALS", BaseStyle -> None, 
        Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
        "Preemptive", ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "RelatedTutorialsSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Related Tutorials"}], 
        "RelatedTutorialsSection"], BaseStyle -> None, 
       Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
       "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"0359e21c-7d13-4fb5-add2-714d3cb6ee47"],

Cell[TextData[ButtonBox["Introduction to GeneralRelativityTensors",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Introduction to \
GeneralRelativityTensors"]], \
"RelatedTutorials",ExpressionUUID->"23ebc6c6-bc77-4c19-8ecc-3a2f9afd5f1c"],

Cell[TextData[ButtonBox["Introduction to Tensor Curves",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Introduction to Tensor Curves"]], \
"RelatedTutorials",ExpressionUUID->"72fd7eab-7167-4dfb-b584-e1b6414568f3"],

Cell[TextData[ButtonBox["Manipulating and differentiating Tensors",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Manipulating and differentiating \
Tensors"]], \
"RelatedTutorials",ExpressionUUID->"f3ebac00-4e2a-4d47-ae05-2f0eef557758"],

Cell[TextData[ButtonBox["Caching Tensor values",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Caching Tensor values"]], \
"RelatedTutorials",ExpressionUUID->"d20105fd-4333-4d0a-93b8-10e086d61afc"],

Cell[TextData[ButtonBox["Examples - Wave equations",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Examples - Wave equations"]], \
"RelatedTutorials",ExpressionUUID->"a4a6e354-75e6-4600-af29-fde9b2324b4a"]
}, Open  ]]
}, Open  ]],

Cell[" ", \
"FooterCell",ExpressionUUID->"d30ef124-0ac7-4dc4-b2eb-a397e70351fd"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Low level Tensor operations",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "GeneralRelativityTensors`", 
    "keywords" -> {"Tensors", "Operations", "GeneralRelativityTensors"}, 
    "index" -> True, "label" -> "Low level Tensor operations", "language" -> 
    "en", "paclet" -> "Low level Tensor operations", "status" -> "None", 
    "summary" -> "Forming Tensor Curves and performing common actions.", 
    "synonyms" -> {}, "title" -> "Low level Tensor operations", "windowTitle" -> 
    "Low level Tensor operations", "type" -> "Tutorial", "uri" -> 
    "GeneralRelativityTensors/tutorial/Low level Tensor operations", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> "", "LinkTrails" -> 
  ""},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

