Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"9a9e3899-1779-4321-a4a0-a77319f27557"],

Cell[TextData[{
 ButtonBox["GeneralRelativityTensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["GeneralRelativityTensors`TensorDefinitions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors`\
TensorDefinitions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["OnCurveQ",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:GeneralRelativityTensors/ref/OnCurveQ"]
}], "LinkTrail",ExpressionUUID->"7c7758a8-6741-4e7b-ae1a-16625c83d595"],

Cell[BoxData[GridBox[{
   {Cell["GENERALRELATIVITYTENSORS`TENSORDEFINITIONS PACLET SYMBOL", 
     "PacletNameCell",ExpressionUUID->"4a844106-e2eb-4a13-9453-77aa2f6910f3"],
     Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"Curve":>Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/ref/Curve"], "CurveQ":>
       Documentation`HelpLookup["paclet:GeneralRelativityTensors/ref/CurveQ"],
        "ToCurve":>Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/ref/ToCurve"], "ToTensorOnCurve":>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/ref/ToTensorOnCurve"], 
       "ToTensorFieldOnCurve":>Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/ref/ToTensorFieldOnCurve"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "71073e50-8eb4-48ff-b9da-ec487a1a5387"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar",ExpressionUUID->"795f0e65-e871-4c88-8ce5-7e65678ec165"]}
  }]], "AnchorBarGrid",ExpressionUUID->"0f122aa7-d139-4dcf-829a-6f6ea43073eb"],

Cell[CellGroupData[{

Cell["OnCurveQ", \
"ObjectName",ExpressionUUID->"5141c47f-252d-4a65-bafe-a6746d8cfb98"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["OnCurveQ",
        BaseStyle->"Link",
        ButtonData->"paclet:GeneralRelativityTensors/ref/OnCurveQ"], "[", 
       StyleBox["t", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "9c9efa9a-2738-46b1-bf69-f54de9f1c97d"],
     "\[LineSeparator]returns True if the values of Tensor t are evaluatated \
along on a Curve. OnCurveQ[t] also returns True if t is a Curve"
    }],ExpressionUUID->"1902d195-7801-4ed6-9d79-b34840effd90"]}
  }]], "Usage",ExpressionUUID->"0df0b3cd-4e3a-49d4-b644-a5a8cf44ac4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"d5d33706-6715-4299-8565-2c8bd5adc217"],

Cell["A Tensor on a Curve is not a Curve", \
"Notes",ExpressionUUID->"5479e8eb-98a9-4000-83c5-c95912bc0562"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Examples"}], 
        "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0,
 CellTags->
  "PrimaryExamplesSection",ExpressionUUID->"19b54c59-09a9-432a-9e14-\
d663398b8b24"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "42c9eb20-caa0-48d7-96ab-783872063f08"]
}], "ExampleSection",ExpressionUUID->"f9412e1d-8bad-4a9c-9ec6-3e60cc87f27c"],

Cell[CellGroupData[{

Cell["uS = FourVelocityVector[\"SchwarzschildGeneric\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"aec41706-ab9f-4f8b-ae4b-fb179baadc6c"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["u", "", "\[Alpha]"], "[", "\<\"\[Tau]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"dc2230e2-12bb-47da-8776-0d13d0d253d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["xS = Curve[uS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"60dacf53-75fc-4544-8d68-e7f6e3efeb30"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x", "", "\[Alpha]"], "[", "\<\"\[Tau]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"40b25e23-6a89-495f-a718-0368f64d2753"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CurveQ[uS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"0555208f-b3f9-40f7-972c-92702bc3e648"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"341ba258-287a-45c2-b23d-9800e22092d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CurveQ[xS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"5ad944e2-1318-46c3-bb40-01a6936896b5"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"bbaa07d6-97a8-459c-892d-f8974d9b4aab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["OnCurveQ[uS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"c2b0175b-b312-4480-bc9d-090ab6feaf4c"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"7b8dd8be-7396-4a7a-b568-cc7b899e9b3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["OnCurveQ[xS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"4e3cdf0e-27b6-4ccb-a464-3ed32f7f3ff3"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"2e65c721-316a-4737-b871-47974dab2b6f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "See Also"}], "SeeAlsoSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"904673cf-704c-4cb4-a005-a321aed3c38c"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["Curve",
    BaseStyle->"Link",
    ButtonData->"paclet:GeneralRelativityTensors/ref/Curve"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "8159f44d-6465-40f4-aef7-3df64d4ec072"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["CurveQ",
    BaseStyle->"Link",
    ButtonData->"paclet:GeneralRelativityTensors/ref/CurveQ"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "723f48ea-47d9-468e-8186-fee9a2639e21"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToCurve",
    BaseStyle->"Link",
    ButtonData->"paclet:GeneralRelativityTensors/ref/ToCurve"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "03ff057e-4f39-4b1a-adaa-2b77a814459c"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToTensorOnCurve",
    BaseStyle->"Link",
    ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorOnCurve"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "9283c801-465a-4f11-aec6-3eee909798c7"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToTensorFieldOnCurve",
    BaseStyle->"Link",
    ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorFieldOnCurve"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "a44cb6cb-f6b7-485d-8061-53b816bf23bd"]
}], "SeeAlso",ExpressionUUID->"b7a1716e-bc40-4c95-9033-353e1dc27575"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"61689f7b-c515-4bb4-a75b-9fcfbafa8440"],

Cell[BoxData[""],ExpressionUUID->"26a4e608-2e59-412f-b35e-43f28970e45d"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"OnCurveQ",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "GeneralRelativityTensors`", 
    "keywords" -> {"OnCurveQ", "ONCURVEQ", "oncurveq"}, "index" -> True, 
    "label" -> 
    "GeneralRelativityTensors/GeneralRelativityTensors`TensorDefinitions \
Symbol", "language" -> "en", "paclet" -> 
    "GeneralRelativityTensors`TensorDefinitions", "status" -> "None", 
    "summary" -> 
    "OnCurveQ[t] returns True if the values of Tensor t are evaluatated along \
on a Curve. OnCurveQ[t] also returns True if t is a Curve", 
    "synonyms" -> {"OnCurveQ", "ONCURVEQ", "oncurveq"}, "title" -> "OnCurveQ",
     "windowTitle" -> "OnCurveQ", "type" -> "Symbol", "uri" -> 
    "GeneralRelativityTensors/ref/OnCurveQ", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "LinkTrails" -> "", "NewStyles" -> False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

