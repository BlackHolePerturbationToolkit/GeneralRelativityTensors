Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"d735f581-05b6-4908-b10e-e8029de5452b"],

Cell[TextData[{
 ButtonBox["GeneralRelativityTensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["GeneralRelativityTensors`TensorDefinitions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors`\
TensorDefinitions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["TensorName",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:GeneralRelativityTensors/ref/TensorName"]
}], "LinkTrail",ExpressionUUID->"4b8b469e-16df-4687-ba31-8693a00bf9de"],

Cell[BoxData[GridBox[{
   {Cell["GENERALRELATIVITYTENSORS`TENSORDEFINITIONS PACLET SYMBOL", 
     "PacletNameCell",ExpressionUUID->"7f4013d8-328a-4bbe-bfa5-9c709711dc9b"],
     Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"TensorDisplayName":>Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/ref/TensorDisplayName"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "f1e1ec8b-7a0e-4432-a47b-ec0f19c82074"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar",ExpressionUUID->"c4ee724d-6ba3-458b-9e2c-0a32c0b14206"]}
  }]], "AnchorBarGrid",ExpressionUUID->"c7779543-dcd4-4e49-92f4-ff391b1edaf4"],

Cell[CellGroupData[{

Cell["TensorName", \
"ObjectName",ExpressionUUID->"c37d26e5-a3f9-47fe-bd41-4959a7b53ee3"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["TensorName",
        BaseStyle->"Link",
        ButtonData->"paclet:GeneralRelativityTensors/ref/TensorName"], "[", 
       StyleBox["t", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "de849b7f-954c-4479-8aae-6d4c320349ea"],
     "\[LineSeparator]returns the name of Tensor t which is used for storing \
cached values in the Symbol RawTensorValues."
    }],ExpressionUUID->"b5d63114-b51e-43d3-97af-b081ebdb8d9c"]}
  }]], "Usage",ExpressionUUID->"1a7aac8a-3d42-43b1-9adf-8e6608a38674"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"7051c0f4-97b6-4302-b31b-298e2a336fc4"],

Cell["A Tensor's TensorName is used for caching.", \
"Notes",ExpressionUUID->"95958c4c-6835-4236-81a5-ee966e90fce5"],

Cell["Automatically generated TensorNames end in -Auto.", \
"Notes",ExpressionUUID->"b527b749-c69c-4191-8c0f-77a337405267"],

Cell["A TensorName that ends in -Auto is not cached.", \
"Notes",ExpressionUUID->"a2f1a2b1-8224-4ed7-80a3-80018ae061cc"],

Cell["\<\
If no TensorDisplayName is given when a Tensor is formed, the TensorName will \
be used for the TensorDisplayName also.\
\>", "Notes",ExpressionUUID->"568cffef-6f71-4b75-ad69-a19eb7cb11a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Examples"}], 
        "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0,
 CellTags->
  "PrimaryExamplesSection",ExpressionUUID->"efd1cd0b-8035-4f1c-8dce-\
6820b9f1b9d1"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "ac5e4f8d-7995-4a27-9f0f-4005a790610a"]
}], "ExampleSection",ExpressionUUID->"df0f51b5-a803-4f30-8d51-5dd8a3c58b13"],

Cell[CellGroupData[{

Cell["gS = ToMetric[\"Schwarzschild\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"cbd08a97-22e6-4839-814d-588d223c9741"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"905fd3d1-0598-4f9c-b485-2358e4ac0795"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TensorName[gS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"c2c6f03b-c22d-4c3b-a484-db478bb74e71"],

Cell[BoxData["\<\"SchwarzschildMetric\"\>"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"76adf392-7848-459a-8a45-d058f0357d30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ricS = RicciTensor[gS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"774470b1-b437-40bf-9b51-bb06893ea3cc"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"d80404ed-6bc8-4b87-b0af-d314c84d6a36"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TensorName[gS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"120c0ada-884a-446a-a954-448770ca95af"],

Cell[BoxData["\<\"SchwarzschildMetric\"\>"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"7128b0d1-2882-4dde-9a41-7e8269aaae2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["dgS = CovariantD[gS,-\[Gamma]]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"3889c34b-d010-46ff-9e58-b3b3d16b31c5"],

Cell[BoxData[
 RowBox[{
  TagBox[
   SubsuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[PartialD]", "g"}], ")"}], "\[Gamma]\[Alpha]\[Beta]", ""],
   DisplayForm], "-", 
  RowBox[{
   TagBox[
    SubsuperscriptBox["\[CapitalGamma]", 
     RowBox[{"  ", "\[Beta]\[Gamma]"}], 
     RowBox[{"\[Delta]", "    "}]],
    DisplayForm], " ", 
   TagBox[
    SubsuperscriptBox["g", "\[Alpha]\[Delta]", ""],
    DisplayForm]}], "-", 
  RowBox[{
   TagBox[
    SubsuperscriptBox["\[CapitalGamma]", 
     RowBox[{"  ", "\[Alpha]\[Gamma]"}], 
     RowBox[{"\[Delta]", "    "}]],
    DisplayForm], " ", 
   TagBox[
    SubsuperscriptBox["g", "\[Delta]\[Beta]", ""],
    DisplayForm]}]}]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"83d755a2-18bf-4f35-8e17-096f69ac14c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TensorName[MergeTensors[dgS]]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"e17c1dbc-4530-4240-90e6-8c5b944a0cee"],

Cell[BoxData["\<\"(((PartialDSchwarzschildMetric)-Auto+(-1(\
ChristoffelSymbolSchwarzschildMetric\[CenterDot]SchwarzschildMetric)-Auto)-\
Auto-Auto)-Auto+(-1(ChristoffelSymbolSchwarzschildMetric\[CenterDot]\
SchwarzschildMetric)-Auto)-Auto-Auto)-Auto\"\>"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"47d55f96-6958-44ba-ad07-2e0312f2563c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "See Also"}], "SeeAlsoSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"b963e0e6-e832-40c2-963e-eaead698b4d2"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["TensorDisplayName",
    BaseStyle->"Link",
    ButtonData->"paclet:GeneralRelativityTensors/ref/TensorDisplayName"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "d529b149-044b-4a04-9a97-48716dced7b8"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " "
}], "SeeAlso",ExpressionUUID->"546f5d21-fcbf-451a-ab4a-0c20386f6c94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"1d605645-8ed1-4ac1-8b47-dbc168aa5cf9"],

Cell[BoxData[""],ExpressionUUID->"15bacf63-8660-4e40-9c17-703949da4189"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"TensorName",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "GeneralRelativityTensors`", 
    "keywords" -> {"TensorName", "TENSORNAME", "tensorname"}, "index" -> True,
     "label" -> 
    "GeneralRelativityTensors/GeneralRelativityTensors`TensorDefinitions \
Symbol", "language" -> "en", "paclet" -> 
    "GeneralRelativityTensors`TensorDefinitions", "status" -> "None", 
    "summary" -> 
    "TensorName[t] returns the name of Tensor t which is used for storing \
cached values in the Symbol RawTensorValues.", 
    "synonyms" -> {"TensorName", "TENSORNAME", "tensorname"}, "title" -> 
    "TensorName", "windowTitle" -> "TensorName", "type" -> "Symbol", "uri" -> 
    "GeneralRelativityTensors/ref/TensorName", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "LinkTrails" -> "", "NewStyles" -> False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

