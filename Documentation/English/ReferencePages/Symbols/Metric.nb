Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"0ddaa42d-d722-4901-9af4-88d418daaa86"],

Cell[TextData[{
 ButtonBox["Tensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/guide/Tensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["Tensors`TensorDefinitions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/guide/Tensors`TensorDefinitions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["Metric",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/ref/Metric"]
}], "LinkTrail",ExpressionUUID->"9a8b3c8a-2fd2-4212-953e-1819f0b8c48f"],

Cell[BoxData[GridBox[{
   {Cell["TENSORS`TENSORDEFINITIONS PACLET SYMBOL", "PacletNameCell",
     ExpressionUUID->"bb133095-6323-40e8-aa81-78bcb19eaa19"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"ToMetric":>Documentation`HelpLookup[
       "paclet:Tensors/ref/ToMetric"], "MetricQ":>Documentation`HelpLookup[
       "paclet:Tensors/ref/MetricQ"], "ToCurve":>Documentation`HelpLookup[
       "paclet:Tensors/ref/ToCurve"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "c938776b-dfdf-4077-9799-08c2cb5a9bad"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar",ExpressionUUID->"c1fd093e-d362-4713-9628-407c65b65370"]}
  }]], "AnchorBarGrid",ExpressionUUID->"c3cba78b-28bf-497b-a380-4c0b26812a83"],

Cell[CellGroupData[{

Cell["Metric", \
"ObjectName",ExpressionUUID->"cf61abdb-7571-4398-955c-9caac5b0f8ff"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["Metric",
        BaseStyle->"Link",
        ButtonData->"paclet:Tensors/ref/Metric"], "[", 
       StyleBox["t", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "0b4857fc-8bdc-4430-a73f-b968808a02b8"],
     "\[LineSeparator]returns the metric Tensor associated with the Tensor \
t."
    }],ExpressionUUID->"f5f794ff-9600-43cf-befa-45b38929703d"]}
  }]], "Usage",ExpressionUUID->"10043877-62f4-4e35-8292-147ddd1d4b33"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"71d5d9d2-02b1-4bb1-84e5-0d39887b71db"],

Cell["Metric[t] will return t itself if it is a metric.", \
"Notes",ExpressionUUID->"918ced8d-b317-4994-864b-8aba15e20d40"],

Cell["\<\
If t is on a curve, Metric[t] returns the metric Tensor on the same curve.\
\>", "Notes",ExpressionUUID->"225e7c6d-209d-434e-89b8-e86ae1745885"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Examples"}], 
        "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0,
 CellTags->
  "PrimaryExamplesSection",ExpressionUUID->"7cab3751-acd5-4051-ac71-\
dc3ea4fb306c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "0530c52b-66c8-4add-8b72-29cad9e6d856"]
}], "ExampleSection",ExpressionUUID->"e1501e99-ebd2-4fc0-96dd-4b713fb44273"],

Cell[CellGroupData[{

Cell["gK = ToMetric[\"Kerr\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"8c72a8c0-8f4b-4a1b-a993-04dd5f68ca9e"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"262ee9c6-edbc-447d-96c3-9891095c9748"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
c1 = ToCurve[\"x1\", gK, {t[\[Chi]], (p M)/(1 + e Cos[\[Chi]]), \[Pi]/2, \
\[Phi][\[Chi]]}, \[Chi]]\
\>", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"c6421edd-0dcc-4268-b53f-59f50392e148"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Chi]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"4266f486-2bd3-41c8-be41-ac1b3e6de307"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gKC = ToTensorOnCurve[gK, c1]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"8f427453-06be-473e-a007-9414b11daafc"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""], "[", "\<\"\[Chi]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"3e6ca1e7-8d8f-4bde-ba42-fbe67c51d913"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metric[gK]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"a301e504-3181-4ac7-9a4e-160ce89b804f"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"2c426e2e-3a74-4caf-a9cb-64103b9bbc6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metric[c1]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"904bd6a7-6629-4817-9cc9-12a938235484"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"4683a30b-4eb6-4c3c-9b21-50ef2d4d385f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metric[gKC]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"e07e6d2c-4413-48fc-9b75-9ae6485a8039"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""], "[", "\<\"\[Chi]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"d1eadbc4-46be-4ba3-a1fc-c5eda6fb2fc9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "See Also"}], "SeeAlsoSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"5c85d132-5eb1-40ab-8c72-5a65e841c094"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToMetric",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/ToMetric"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "4616b730-7dcf-4599-80e5-6d15c558c0c0"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["MetricQ",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/MetricQ"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "689873db-ee53-40d9-aa13-a5b66d25a957"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToCurve",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/ToCurve"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "89aa05aa-872a-4f3f-947f-435b96bd034c"]
}], "SeeAlso",ExpressionUUID->"3acb253b-f283-47dc-9991-07347441e1ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"d597e07e-4dd9-4ff1-aec6-497abb754549"],

Cell[BoxData[""],ExpressionUUID->"22a4cb2e-3e93-441f-9ce2-9319113814e2"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Metric",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "Tensors`", "keywords" -> {"Metric", "METRIC", "metric"}, 
    "index" -> True, "label" -> "Tensors/Tensors`TensorDefinitions Symbol", 
    "language" -> "en", "paclet" -> "Tensors`TensorDefinitions", "status" -> 
    "None", "summary" -> 
    "Metric[t] returns the metric Tensor associated with the Tensor t.", 
    "synonyms" -> {"Metric", "METRIC", "metric"}, "title" -> "Metric", 
    "windowTitle" -> "Metric", "type" -> "Symbol", "uri" -> 
    "Tensors/ref/Metric", "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> 
  "", "LinkTrails" -> "", "NewStyles" -> False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

