Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"f3539eca-6f10-4c50-8555-1b1c64220780"],

Cell[TextData[{
 ButtonBox["Tensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/guide/Tensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["Tensors`TensorDefinitions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/guide/Tensors`TensorDefinitions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["ToTensor",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/ref/ToTensor"]
}], "LinkTrail",ExpressionUUID->"a4e03d5d-7a0b-44d6-b345-f0e3429e50e4"],

Cell[BoxData[GridBox[{
   {Cell["TENSORS`TENSORDEFINITIONS PACLET SYMBOL", "PacletNameCell",
     ExpressionUUID->"22edaa4b-4dd9-4a87-bf1e-8a30e2d558b3"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"ToMetric":>Documentation`HelpLookup[
       "paclet:Tensors/ref/ToMetric"], "ToCurve":>Documentation`HelpLookup[
       "paclet:Tensors/ref/ToCurve"], "ToTensorOnCurve":>
       Documentation`HelpLookup["paclet:Tensors/ref/ToTensorOnCurve"], 
       "TensorValues":>Documentation`HelpLookup[
       "paclet:Tensors/ref/TensorValues"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "9f1768b6-6cfb-4428-a0e9-1d15637b0822"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar",ExpressionUUID->"86ce57be-5f53-4ef1-9558-5e25086bf1c2"]}
  }]], "AnchorBarGrid",ExpressionUUID->"dd117d66-fe05-483a-981c-a1cc9bd16967"],

Cell[CellGroupData[{

Cell["ToTensor", \
"ObjectName",ExpressionUUID->"73527126-af4f-48b3-b189-d6bcb1f97667"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ToTensor",
        BaseStyle->"Link",
        ButtonData->"paclet:Tensors/ref/ToTensor"], "[", 
       StyleBox[
        RowBox[{"n", ",", "m", ",", "vals", ",", "inds"}], "TI"], "]"}]], 
      "InlineFormula",ExpressionUUID->"d84761f8-d46e-40ac-9839-5d53e511f86d"],
     
     "\[LineSeparator]returns a Tensor with indices inds and TensorName n. \
The metric m and values vals (given as a consistently sized List) are \
assigned."
    }],ExpressionUUID->"1a2ab60e-3aa1-4245-9b97-b562b0cd18fa"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ToTensor",
        BaseStyle->"Link",
        ButtonData->"paclet:Tensors/ref/ToTensor"], "[", 
       StyleBox[
        RowBox[{"n", ",", "m", ",", "vals"}], "TI"], "]"}]], "InlineFormula",
      ExpressionUUID->"2488fb93-0606-44c3-94d2-4374fb6dec77"],
     "\[LineSeparator]is equivalent, but assumes all contravarient indices."
    }],ExpressionUUID->"526c416f-4a0c-4e1f-9945-c23dd06522bd"]}
  }]], "Usage",ExpressionUUID->"31c64f96-7f06-4254-baaf-f9372f3625fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->0,
 "WholeCelGroupOpener" -> 
 True,ExpressionUUID->"e2b31ef0-1708-418a-9cd1-cee4d9a254d9"],

Cell["\<\
The name n can be a two element List. The first element is the actual \
\"TensorName\" (used for internal purposes) while the second is the \
\"TensorDisplayName\" which is used for formatted output in a notebook.\
\>", "Notes",ExpressionUUID->"76506e46-d577-4d57-b243-568acee3f0e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Examples"}], 
        "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0,
 CellTags->
  "PrimaryExamplesSection",ExpressionUUID->"c39ab816-ea0c-4555-af5e-\
72afc1ac4053"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",ExpressionUUID->
  "4e427cad-64f5-4f01-acbe-de7f1908c0da"]
}], "ExampleSection",ExpressionUUID->"ae36b6cd-bca6-44f9-b9c0-f0a2308dd43b"],

Cell[CellGroupData[{

Cell["gK = ToMetric[\"Kerr\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"d2cd3bfb-7ab2-465d-9df1-b55b3d2a0a55"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"6efa2001-f793-4c0e-bd5b-51bcf6aa42cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["t1 = ToTensor[\"t1\", gK, {g[t], h[r], k[r], s[\[Phi]]}]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"2f0ba81f-4203-4b83-8779-09a712c05e9b"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["t1", "", "\[Alpha]"],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"3e8d20b1-6330-46f6-a0be-7815899058ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TensorValues[t1] // TableForm", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"3901bf76-008d-4870-8ee7-cb3f0037f784"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"g", "[", "t", "]"}]},
     {
      RowBox[{"h", "[", "r", "]"}]},
     {
      RowBox[{"k", "[", "r", "]"}]},
     {
      RowBox[{"s", "[", "\[Phi]", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"0da0d337-cf9b-4c82-8263-cb21c2d415e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["t2 = ToTensor[\"t2\", gK, {g[t], h[r], k[r], s[\[Phi]]}, {-\[Alpha]}]", \
"Input",
 CellLabel->"In[1]:=",ExpressionUUID->"9270f747-072a-4f8f-ba30-305b5a0b994a"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["t2", "\[Alpha]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"93f534a6-42ef-4ff0-abeb-ab7837736289"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "See Also"}], "SeeAlsoSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"d42beb95-2c7c-4918-9635-41eb3e812e86"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToMetric",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/ToMetric"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "4f17d646-b8fc-4304-83be-f231708c2a04"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToCurve",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/ToCurve"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "803bf858-da5c-4a77-8c94-c9498d35ba20"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToTensorOnCurve",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/ToTensorOnCurve"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "36b3bc99-c56a-48f6-b5d6-7f924e1aa87a"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["TensorValues",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/TensorValues"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "2175ca7e-b465-49d2-b63a-aeda64c85fa0"]
}], "SeeAlso",ExpressionUUID->"c74f267a-d6f7-4c86-a319-7a4a60bee47b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"361f9652-c0d0-45ce-bc88-516826902fe3"],

Cell[BoxData[""],ExpressionUUID->"5d8fe889-31c0-4ba3-af14-3c57af16219f"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ToTensor",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "Tensors`", 
    "keywords" -> {"ToTensor", "TOTENSOR", "totensor"}, "index" -> True, 
    "label" -> "Tensors/Tensors`TensorDefinitions Symbol", "language" -> "en",
     "paclet" -> "Tensors`TensorDefinitions", "status" -> "None", "summary" -> 
    "ToTensor[n,m,vals,inds] returns a Tensor with indices inds and \
TensorName n. The metric m and values vals (given as a consistently sized \
List) are assigned.\nToTensor[n,m,vals] is equivalent, but assumes all \
contravarient indices.", "synonyms" -> {"ToTensor", "TOTENSOR", "totensor"}, 
    "title" -> "ToTensor", "windowTitle" -> "ToTensor", "type" -> "Symbol", 
    "uri" -> "Tensors/ref/ToTensor", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "LinkTrails" -> "", "NewStyles" -> False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

