Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"3933e507-53cb-4fb7-a951-bf6be4ee74d0"],

Cell[TextData[{
 ButtonBox["GeneralRelativityTensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["GeneralRelativityTensors`TensorDefinitions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors`\
TensorDefinitions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["ValidTensorExpressionQ",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:GeneralRelativityTensors/ref/ValidTensorExpressionQ"]
}], "LinkTrail",ExpressionUUID->"cb7f4047-7ac5-4514-999d-6467e8bb38bf"],

Cell[BoxData[GridBox[{
   {Cell["GENERALRELATIVITYTENSORS`TENSORDEFINITIONS PACLET SYMBOL", 
     "PacletNameCell",ExpressionUUID->"999f7f2e-1d6d-46e2-a162-8da70147557a"],
     Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Tutorials \[RightGuillemet]\"\>",
        StripOnInput->False], {
       RowBox[{"Introduction", " ", "to", " ", "GeneralRelativityTensors"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Introduction to \
GeneralRelativityTensors"], 
       RowBox[{
       "Manipulating", " ", "and", " ", "differentiating", " ", "Tensors"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Manipulating and \
differentiating Tensors"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a7b457fe-9eb5-49a1-a262-bc9f3f15ad4a"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"ValidateTensorExpression":>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/ref/ValidateTensorExpression"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "7889dd3b-139b-405b-95f9-051ee469aa1c"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar",ExpressionUUID->"abf4cc1f-ca62-4914-807c-9917b8bc4977"]}
  }]], "AnchorBarGrid",ExpressionUUID->"92ee758a-ff8e-4436-8a17-3efd27592954"],

Cell[CellGroupData[{

Cell["ValidTensorExpressionQ", \
"ObjectName",ExpressionUUID->"d91def7a-c3e4-422b-a90f-845dc98397e9"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ValidTensorExpressionQ",
        BaseStyle->"Link",
        ButtonData->
         "paclet:GeneralRelativityTensors/ref/ValidTensorExpressionQ"], "[", 
       StyleBox["expr", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "f769c8a6-9d1f-4bfb-8e00-c27cb39af7ba"],
     "\[LineSeparator]tests whether a Tensor expression is valid are returns \
True if it is and False otherwise."
    }],ExpressionUUID->"5368ad3c-9270-4bbd-9eae-f53a78405a3e"]}
  }]], "Usage",ExpressionUUID->"9640e389-8b24-43bc-99c6-2431d976e04b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"cd41c7c1-6f75-4907-936b-b30fe50a570d"],

Cell["\<\
ValidTensorExpressionQ only returns True/False. It does not explain what is \
wrong with the expression.\
\>", "Notes",ExpressionUUID->"ffdcbfeb-23ea-402e-949a-b846f80ba16e"],

Cell["\<\
ValidateTensorExpression is like ValidTensorExpressionQ, but will give error \
messages and Abort.\
\>", "Notes",ExpressionUUID->"9b1a074f-dce9-4c51-985f-6e81c2f29deb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Examples"}], 
        "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0,
 CellTags->
  "PrimaryExamplesSection",ExpressionUUID->"c6e08ce9-184e-40f8-8411-\
38972375480c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "449c98ca-be48-4d44-ae01-118e6dca23ee"]
}], "ExampleSection",ExpressionUUID->"c611f1ad-255d-46b0-92bd-6ef16d29249f"],

Cell[CellGroupData[{

Cell["gS = ToMetric[\"Schwarzschild\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"f813a25b-8f0e-46fd-aeaa-b68f1995a70a"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"93c613d1-0435-4bdf-9413-dccc9d9f2a4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ricS = RicciTensor[gS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"a6388f2c-0c1b-4a3c-9e70-7152565077c2"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"238a25b9-3bc7-46e5-a8dd-f9a466995a4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ValidTensorExpressionQ[gS[-\[Alpha],-\[Beta]]+ricS[-\[Alpha],-\[Beta]]]\
", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"38c39b9b-437b-4e30-a21c-03f8aaf0abc0"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"dcf258c7-ae9b-4276-a303-30eb23f7af76"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ValidTensorExpressionQ[gS[-\[Alpha],-\[Beta]]ricS[-\[Alpha],-\[Beta]]]",\
 "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"2f11c167-29a3-4908-92b1-038ce3cda28b"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"7297d74a-45a9-4bf5-847d-0335a3a40c0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gRN = ToMetric[\"ReissnerNordstrom\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"ac395574-7494-47d8-850d-1115879a1905"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"68a6064f-a28e-4492-8166-251399d87ce4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ValidTensorExpressionQ[gS[-\[Alpha],-\[Beta]]+gRN[-\[Alpha],-\[Beta]]]",\
 "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"831eb49e-3a12-4cec-966b-8cfc2543b1cf"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"52410ccf-f868-4d3e-83f4-13fd428e4021"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "See Also"}], "SeeAlsoSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"98ce6d23-434a-472d-ab94-656accff90ed"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["ValidateTensorExpression",
    BaseStyle->"Link",
    ButtonData->
     "paclet:GeneralRelativityTensors/ref/ValidateTensorExpression"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "3663b750-bebf-438a-b5d7-155ad5e51518"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " "
}], "SeeAlso",ExpressionUUID->"09927cfd-b7ae-461f-9181-6749f6145b0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "TutorialsSection",
 WholeCellGroupOpener->True,
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "TUTORIALS", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "TutorialsSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Tutorials"}], 
        "TutorialsSection"], BaseStyle -> None, 
       Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
       "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"3b2e515e-739d-4f0e-80ad-5161a6a5d4fd"],

Cell[TextData[ButtonBox["Introduction to GeneralRelativityTensors",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Introduction to \
GeneralRelativityTensors"]], \
"Tutorials",ExpressionUUID->"91db360d-e721-4bb4-ad97-e2b5ba15231e"],

Cell[TextData[ButtonBox["Manipulating and differentiating Tensors",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Manipulating and differentiating \
Tensors"]], "Tutorials",ExpressionUUID->"897df357-a6e4-4816-8faa-d36ef950bf86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"14e2fd24-d3d2-4ffe-b255-d33d62c4f89d"],

Cell[BoxData[""],ExpressionUUID->"fb0711af-8f3b-4a3f-98b5-3590b4fe1258"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ValidTensorExpressionQ",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "GeneralRelativityTensors`", 
    "keywords" -> {
     "ValidTensorExpressionQ", "VALIDTENSOREXPRESSIONQ", 
      "validtensorexpressionq"}, "index" -> True, "label" -> 
    "GeneralRelativityTensors/GeneralRelativityTensors`TensorDefinitions \
Symbol", "language" -> "en", "paclet" -> 
    "GeneralRelativityTensors`TensorDefinitions", "status" -> "None", 
    "summary" -> 
    "ValidTensorExpressionQ[expr] tests whether a Tensor expression is valid \
are returns True if it is and False otherwise.", 
    "synonyms" -> {
     "ValidTensorExpressionQ", "VALIDTENSOREXPRESSIONQ", 
      "validtensorexpressionq"}, "title" -> "ValidTensorExpressionQ", 
    "windowTitle" -> "ValidTensorExpressionQ", "type" -> "Symbol", "uri" -> 
    "GeneralRelativityTensors/ref/ValidTensorExpressionQ", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> "", "LinkTrails" -> 
  "", "NewStyles" -> False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

