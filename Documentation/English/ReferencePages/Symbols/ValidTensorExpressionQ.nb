Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"52dbfe98-ac30-40c4-8e47-26796faa869f"],

Cell[TextData[{
 ButtonBox["GeneralRelativityTensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["GeneralRelativityTensors`TensorDefinitions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors`\
TensorDefinitions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["ValidTensorExpressionQ",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:GeneralRelativityTensors/ref/ValidTensorExpressionQ"]
}], "LinkTrail",ExpressionUUID->"f362797d-aa4e-4590-8636-046ff1d793f7"],

Cell[BoxData[GridBox[{
   {Cell["GENERALRELATIVITYTENSORS`TENSORDEFINITIONS PACLET SYMBOL", 
     "PacletNameCell",ExpressionUUID->"5e880ddf-ba65-4947-9336-767ec4392985"],
     Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Tutorials \[RightGuillemet]\"\>",
        StripOnInput->False], {
       RowBox[{"Introduction", " ", "to", " ", "GeneralRelativityTensors"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Introduction to \
GeneralRelativityTensors"], 
       RowBox[{
       "Manipulating", " ", "and", " ", "differentiating", " ", "Tensors"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Manipulating and \
differentiating Tensors"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "8aeea24f-0ab6-4be4-97e6-990d4a1263bc"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"ValidateTensorExpression":>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/ref/ValidateTensorExpression"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "3dbb9576-f051-4fda-924e-bd0ffb179b10"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar",ExpressionUUID->"99f963d1-e9c5-4a96-81a3-e4f250c76388"]}
  }]], "AnchorBarGrid",ExpressionUUID->"14b254bf-9062-4cc2-87f7-9d32d516d167"],

Cell[CellGroupData[{

Cell["ValidTensorExpressionQ", \
"ObjectName",ExpressionUUID->"5e19b005-7954-4c2a-8bef-23c4cf1387dc"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ValidTensorExpressionQ",
        BaseStyle->"Link",
        ButtonData->
         "paclet:GeneralRelativityTensors/ref/ValidTensorExpressionQ"], "[", 
       StyleBox["expr", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "4fc22c73-1d88-4613-9524-e6ee95b9ac20"],
     "\[LineSeparator]tests whether a Tensor expression is valid are returns \
True if it is and False otherwise."
    }],ExpressionUUID->"5b34cf19-14d3-4d67-aafa-f7a7ef44b9e8"]}
  }]], "Usage",ExpressionUUID->"25f66be8-1030-4b7f-b325-e6dc433cc31f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"66869a9a-faf9-4290-ab54-1686c65eae8e"],

Cell["\<\
ValidTensorExpressionQ only returns True/False. It does not explain what is \
wrong with the expression.\
\>", "Notes",ExpressionUUID->"e4a3b7ee-e613-47e6-be19-be81f8b3e670"],

Cell["\<\
ValidateTensorExpression is like ValidTensorExpressionQ, but will give error \
messages and Abort.\
\>", "Notes",ExpressionUUID->"605ea423-6d77-4000-8015-af33ec4d191c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Examples"}], 
        "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0,
 CellTags->
  "PrimaryExamplesSection",ExpressionUUID->"92f90698-991a-4fc5-bfd6-\
419fdbfe9b5f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "71331b20-4666-430f-9c08-5592f5e92c1f"]
}], "ExampleSection",ExpressionUUID->"4955fca6-3980-483b-9ae2-02d074fea66f"],

Cell[CellGroupData[{

Cell["gS = ToMetric[\"Schwarzschild\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"8b370f65-c162-4290-ae40-b9bf48269caa"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"9b9770d6-3f95-4822-901c-a4ad86c7c1c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ricS = RicciTensor[gS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"7114d674-3c9f-4875-82c6-52c099a33a95"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["R", "\[Beta]\[Gamma]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"218c1961-7ef1-4a43-8072-3d0eef709e54"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ValidTensorExpressionQ[gS[-\[Alpha],-\[Beta]]+ricS[-\[Alpha],-\[Beta]]]\
", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"b02de012-0ff7-4aae-b3f4-505c20b4463f"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"25c2186f-6998-48fc-8b9f-8ac1c022decd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ValidTensorExpressionQ[gS[-\[Alpha],-\[Beta]]ricS[-\[Alpha],-\[Beta]]]",\
 "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"760d22dd-ad95-4128-9cb7-7bc1d5604c3d"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"54a6aa3b-604b-40e7-a840-28d3ab18dcf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gRN = ToMetric[\"ReissnerNordstrom\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"9a9c5af2-68fd-4db5-8ce8-a47a061e3059"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"3ce8f5bf-de5d-4513-bb54-83e786cc5f1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ValidTensorExpressionQ[gS[-\[Alpha],-\[Beta]]+gRN[-\[Alpha],-\[Beta]]]",\
 "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"bd33b248-b73f-4224-b6f9-ab0d0fc37aa3"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"a9493511-b40c-4e1e-80be-8a00a6a3d41f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "See Also"}], "SeeAlsoSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"eb9e5d00-23a4-4ef7-b24a-bd3fb1535c55"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["ValidateTensorExpression",
    BaseStyle->"Link",
    ButtonData->
     "paclet:GeneralRelativityTensors/ref/ValidateTensorExpression"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "d0cda09d-5d67-4383-89b6-e2ddd15c2905"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " "
}], "SeeAlso",ExpressionUUID->"020ff534-bc7a-4ce4-bc9c-a2c74e4b826b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "TutorialsSection",
 WholeCellGroupOpener->True,
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "TUTORIALS", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "TutorialsSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Tutorials"}], 
        "TutorialsSection"], BaseStyle -> None, 
       Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
       "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"b696c5d8-ae9b-4266-bc17-a15b1def7e6a"],

Cell[TextData[ButtonBox["Introduction to GeneralRelativityTensors",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Introduction to \
GeneralRelativityTensors"]], \
"Tutorials",ExpressionUUID->"88e2bf81-f62c-4550-8ada-9882ab32fa2f"],

Cell[TextData[ButtonBox["Manipulating and differentiating Tensors",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Manipulating and differentiating \
Tensors"]], "Tutorials",ExpressionUUID->"cf9e5cc4-6853-4b40-99de-9ae24a76119e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"0a284e67-3f7f-42c2-a501-165b8e8ac9dd"],

Cell[BoxData[""],ExpressionUUID->"9ca6b453-8399-42a0-be3e-12f55830c85d"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ValidTensorExpressionQ",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "GeneralRelativityTensors`", 
    "keywords" -> {
     "ValidTensorExpressionQ", "VALIDTENSOREXPRESSIONQ", 
      "validtensorexpressionq"}, "index" -> True, "label" -> 
    "GeneralRelativityTensors/GeneralRelativityTensors`TensorDefinitions \
Symbol", "language" -> "en", "paclet" -> 
    "GeneralRelativityTensors`TensorDefinitions", "status" -> "None", 
    "summary" -> 
    "ValidTensorExpressionQ[expr] tests whether a Tensor expression is valid \
are returns True if it is and False otherwise.", 
    "synonyms" -> {
     "ValidTensorExpressionQ", "VALIDTENSOREXPRESSIONQ", 
      "validtensorexpressionq"}, "title" -> "ValidTensorExpressionQ", 
    "windowTitle" -> "ValidTensorExpressionQ", "type" -> "Symbol", "uri" -> 
    "GeneralRelativityTensors/ref/ValidTensorExpressionQ", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> "", "LinkTrails" -> 
  "", "NewStyles" -> False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

