Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"39f94910-e1ef-43e0-9cc7-ce0125fe11e7"],

Cell[TextData[{
 ButtonBox["Tensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/guide/Tensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["Tensors`CommonTensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/guide/Tensors`CommonTensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["BianchiIdentities",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/ref/BianchiIdentities"]
}], "LinkTrail",ExpressionUUID->"03056ac6-6b8e-4c03-be03-1f6e395fc665"],

Cell[CellGroupData[{

Cell["BianchiIdentities", \
"ObjectName",ExpressionUUID->"f926d7cc-52a9-43ae-9a3c-a56af0375616"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["BianchiIdentities",
        BaseStyle->"Link",
        ButtonData->"paclet:Tensors/ref/BianchiIdentities"], "[", 
       StyleBox[
        RowBox[{"m", ",", "n"}], "TI"], "]"}]], "InlineFormula",
      ExpressionUUID->"0faa82be-53f1-4fb3-953d-383a5017bc15"],
     "\[LineSeparator]returns the n-th contracted Bianchi identities, where n \
can be 0, 1, or 2. BianchiIdentities[m] is equivalent to \
BianchiIdentities[m,0]."
    }],ExpressionUUID->"61fcf25d-4368-46f1-9112-3cdd8ee52f8a"]}
  }]], "Usage",ExpressionUUID->"20d3d586-83ef-4c9b-8294-a13758b4a22c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"afc17dfc-8cec-478e-9e69-2222e26884d1"],

Cell["The following options can be given: ", \
"Notes",ExpressionUUID->"40047f40-f995-40bc-a944-8d9a5b95dcc4"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "a0a63479-f6ba-4745-9874-2161aa041cde"], "ActWith", "Identity", 
    Cell["\<\
Function that is applied to the elements of the tensor as they are calculated.\
\>", "TableText",ExpressionUUID->"0d5d45e0-4177-4979-b361-3afb10fd9957"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "bcb75ca7-ece6-4a38-857c-a9c79c739b91"], "ActWithNested", "Identity", 
    Cell["\<\
Function that is applied to the elements of the tensor and also passed to any \
other functions called internally.\
\>", "TableText",ExpressionUUID->"81942637-d1b1-485a-9e58-135544b21ff2"]}
  },
  GridBoxAlignment->{
   "Columns" -> {Left, Left, {Left}}, "ColumnsIndexed" -> {}, 
    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, 
      True}}}},ExpressionUUID->"15b82d78-1d62-4e40-9cb8-9c1be31c9385"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"7a574744-3883-4dcb-aed2-7577b6268d2b"],

Cell[BoxData[""],ExpressionUUID->"043fb854-0638-4180-8dd8-4919f1c99f98"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"BianchiIdentities",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "Tensors`", 
    "keywords" -> {
     "BianchiIdentities", "BIANCHIIDENTITIES", "bianchiidentities"}, "index" -> 
    True, "label" -> "Tensors/Tensors`CommonTensors Symbol", "language" -> 
    "en", "paclet" -> "Tensors`CommonTensors", "status" -> "None", "summary" -> 
    "BianchiIdentities[m,n] returns the n-th contracted Bianchi identities, \
where n can be 0, 1, or 2. BianchiIdentities[m] is equivalent to \
BianchiIdentities[m,0].", 
    "synonyms" -> {
     "BianchiIdentities", "BIANCHIIDENTITIES", "bianchiidentities"}, "title" -> 
    "BianchiIdentities", "windowTitle" -> "BianchiIdentities", "type" -> 
    "Symbol", "uri" -> "Tensors/ref/BianchiIdentities", "WorkflowDockedCell" -> 
    ""}, "SearchTextTranslated" -> "", "LinkTrails" -> "", "NewStyles" -> 
  False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

