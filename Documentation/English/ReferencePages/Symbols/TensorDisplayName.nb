Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"1891b51d-1be8-4e6b-910f-f945027e3f0e"],

Cell[TextData[{
 ButtonBox["GeneralRelativityTensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["GeneralRelativityTensors`TensorDefinitions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors`\
TensorDefinitions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["TensorDisplayName",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:GeneralRelativityTensors/ref/TensorDisplayName"]
}], "LinkTrail",ExpressionUUID->"bde7ff9b-2829-4f04-97d3-a43c01be398a"],

Cell[BoxData[GridBox[{
   {Cell["GENERALRELATIVITYTENSORS`TENSORDEFINITIONS PACLET SYMBOL", 
     "PacletNameCell",ExpressionUUID->"1d984cc2-bb0a-4820-ba99-4267a6035dcf"],
     Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"TensorName":>Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/ref/TensorName"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "10160c10-0ac7-4800-bb8f-6280bb51f325"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar",ExpressionUUID->"07ca8736-3667-4a4f-960f-186723270121"]}
  }]], "AnchorBarGrid",ExpressionUUID->"6b1788c8-1a11-45ca-8fbc-5a7e7e105c88"],

Cell[CellGroupData[{

Cell["TensorDisplayName", \
"ObjectName",ExpressionUUID->"a83b9da4-2171-4b27-bed6-005e50887634"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["TensorDisplayName",
        BaseStyle->"Link",
        ButtonData->"paclet:GeneralRelativityTensors/ref/TensorDisplayName"], 
       "[", 
       StyleBox["t", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "d10b8544-b0e9-493f-b4ae-26662ac683fe"],
     "\[LineSeparator]returns the name of Tensor t that is used for formatted \
output."
    }],ExpressionUUID->"c7a2eef4-520f-4e55-a950-d77c513c24c9"]}
  }]], "Usage",ExpressionUUID->"39ef396b-dba3-4be0-aab2-a0be958bb491"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
       Evaluator -> None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"4bdcf642-482a-4289-8e08-1ce5c1c9648f"],

Cell["\<\
If no TensorDisplayName is given when a Tensor is formed, the TensorName will \
be used for the TensorDisplayName also\
\>", "Notes",ExpressionUUID->"c31ced78-41eb-4617-abb5-e5b305e2e690"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Examples"}], 
        "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0,
 CellTags->
  "PrimaryExamplesSection",ExpressionUUID->"8d78d7f2-4dfb-47d8-9119-\
56dac27b4bc7"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "dfaf0397-8274-4934-94ce-2d0ee0c0e54f"]
}], "ExampleSection",ExpressionUUID->"f81b786f-6aa2-4515-998d-cc3531a7056c"],

Cell[CellGroupData[{

Cell["gS = ToMetric[\"Schwarzschild\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"595beb0d-4039-4616-bab0-1636e155f6c1"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"8fab9ea6-28f4-4afb-812c-7f27b4fbdcf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TensorName[gS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"f22b55a5-4e50-48e2-8a77-7c9b18afbd02"],

Cell[BoxData["\<\"SchwarzschildMetric\"\>"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"befff99a-39cc-43a7-8389-a08b9ec2398a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TensorDisplayName[gS]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"5a01b2a4-319e-47c5-bc89-27eb970d9b2c"],

Cell[BoxData["\<\"g\"\>"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"327091cf-c5ed-4641-bd94-51e641be0a76"]
}, Open  ]],

Cell[CellGroupData[{

Cell["xT = ToTensor[\"x1\",gS,{k[t],f[r],g[r],h[r]}]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"34e59d54-536e-4a95-987d-461f64ce785c"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["x1", "", "\[Alpha]"],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"4310a7e2-bf40-4f4e-aa1b-103c8444c3eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TensorName[xT]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"e3a78906-d3d4-4501-b2da-c305b614477d"],

Cell[BoxData["\<\"x1\"\>"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"9847fbf3-d2c0-4b0c-9b27-02d7c8420ede"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TensorDisplayName[xT]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"9d0b32b4-736f-4be3-88ff-c7f42cec2c99"],

Cell[BoxData["\<\"x1\"\>"], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"e4de31f5-6387-48f1-9046-ea0c0437f0ec"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "See Also"}], "SeeAlsoSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"822a42e1-a9e2-47de-b048-ab8c907134ab"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["TensorName",
    BaseStyle->"Link",
    ButtonData->"paclet:GeneralRelativityTensors/ref/TensorName"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "e7f7d27f-ab0c-42e6-b974-978d20df170a"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " "
}], "SeeAlso",ExpressionUUID->"1445761e-8a6c-4134-945f-48103cca2fb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"55ac0f38-42d3-45ad-b3b6-c2c4c5d6f37b"],

Cell[BoxData[""],ExpressionUUID->"dee77cf0-d8e0-42f5-8988-edbd9623d15d"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"TensorDisplayName",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "GeneralRelativityTensors`", 
    "keywords" -> {
     "TensorDisplayName", "TENSORDISPLAYNAME", "tensordisplayname"}, "index" -> 
    True, "label" -> 
    "GeneralRelativityTensors/GeneralRelativityTensors`TensorDefinitions \
Symbol", "language" -> "en", "paclet" -> 
    "GeneralRelativityTensors`TensorDefinitions", "status" -> "None", 
    "summary" -> 
    "TensorDisplayName[t] returns the name of Tensor t that is used for \
formatted output.", 
    "synonyms" -> {
     "TensorDisplayName", "TENSORDISPLAYNAME", "tensordisplayname"}, "title" -> 
    "TensorDisplayName", "windowTitle" -> "TensorDisplayName", "type" -> 
    "Symbol", "uri" -> "GeneralRelativityTensors/ref/TensorDisplayName", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> "", "LinkTrails" -> 
  "", "NewStyles" -> False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

