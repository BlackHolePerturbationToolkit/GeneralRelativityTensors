Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"9b43c4c5-0ebc-4be8-8a19-effc7e306548"],

Cell[TextData[{
 ButtonBox["Tensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/guide/Tensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["Tensors`TensorDefinitions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/guide/Tensors`TensorDefinitions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["ToTensorOnCurve",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:Tensors/ref/ToTensorOnCurve"]
}], "LinkTrail",ExpressionUUID->"6efd2eb4-ad31-409c-8d54-ea332799e73d"],

Cell[BoxData[GridBox[{
   {Cell["TENSORS`TENSORDEFINITIONS PACLET SYMBOL", "PacletNameCell",
     ExpressionUUID->"85e09cda-7072-4ad5-81d7-6b7c3b8e1e98"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"ToMetric":>Documentation`HelpLookup[
       "paclet:Tensors/ref/ToMetric"], "ToTensor":>Documentation`HelpLookup[
       "paclet:Tensors/ref/ToTensor"], "TensorValues":>
       Documentation`HelpLookup["paclet:Tensors/ref/TensorValues"], 
       "RawTensorValues":>Documentation`HelpLookup[
       "paclet:Tensors/ref/RawTensorValues"], "ToCurve":>
       Documentation`HelpLookup["paclet:Tensors/ref/ToCurve"], "Curve":>
       Documentation`HelpLookup["paclet:Tensors/ref/Curve"], "CurveQ":>
       Documentation`HelpLookup["paclet:Tensors/ref/CurveQ"], "OnCurveQ":>
       Documentation`HelpLookup["paclet:Tensors/ref/OnCurveQ"], 
       "ParametrizedValuesQ":>Documentation`HelpLookup[
       "paclet:Tensors/ref/ParametrizedValuesQ"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "eec4ff0d-c3b2-49c0-a558-48058eb4013d"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar",ExpressionUUID->"f317773d-50e0-4d65-a526-641bc8eb6178"]}
  }]], "AnchorBarGrid",ExpressionUUID->"e1257b03-e1da-4a6d-944b-63cb1b2ae85e"],

Cell[CellGroupData[{

Cell["ToTensorOnCurve", \
"ObjectName",ExpressionUUID->"d2cc3b03-ad01-456e-ba9e-20d2c5cd9003"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ToTensorOnCurve",
        BaseStyle->"Link",
        ButtonData->"paclet:Tensors/ref/ToTensorOnCurve"], "[", 
       StyleBox[
        RowBox[{"t", ",", "c"}], "TI"], "]"}]], "InlineFormula",
      ExpressionUUID->"30c7446b-d27c-4b2e-a34c-ff7fc7b2fb8d"],
     "\[LineSeparator]returns the Tensor t evaluated on the curve c."
    }],ExpressionUUID->"f39f644f-09d0-409c-9395-9dcf2f08880c"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ToTensorOnCurve",
        BaseStyle->"Link",
        ButtonData->"paclet:Tensors/ref/ToTensorOnCurve"], "[", 
       StyleBox[
        RowBox[{"n", ",", "c", ",", "vals", ",", "inds"}], "TI"], "]"}]], 
      "InlineFormula",ExpressionUUID->"7f2be293-e9a6-41b3-8cff-f040ac326687"],
     
     "\[LineSeparator]returns a Tensor with indices inds and TensorName n and \
values vals evaluated on the curve c."
    }],ExpressionUUID->"608c8fe6-74f4-41b6-8c12-5f9ef5ddbc66"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ToTensorOnCurve",
        BaseStyle->"Link",
        ButtonData->"paclet:Tensors/ref/ToTensorOnCurve"], "[", 
       StyleBox[
        RowBox[{"n", ",", "c", ",", "vals"}], "TI"], "]"}]], "InlineFormula",
      ExpressionUUID->"6d7d7c72-0e93-41c3-93e6-eac99bcfcbbc"],
     "\[LineSeparator]is equivalent, but assumes all contravarient indices."
    }],ExpressionUUID->"af4ae76a-f145-445f-a3fb-42097d0b6d77"]}
  }]], "Usage",ExpressionUUID->"6676fdc3-9a38-4fa6-8c24-f0c5e97ad1c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"f0a402df-492f-45c1-afbf-e05035bfaa43"],

Cell["\<\
By default the RawTensorValues of a Tensor on a curve are not evaluated on \
that curve internally. Thus, derivatives can still be taken with respect to \
coordinates.\
\>", "Notes",ExpressionUUID->"b77b0812-0fec-42c8-8c89-b6caaa3eea71"],

Cell["\<\
When TensorValues is called on a Tensor on a curve the internal \
RawTensorValues are evaluated along the curve.\
\>", "Notes",ExpressionUUID->"045c68b8-dfa5-40aa-bb94-6d47ec5d62ad"],

Cell["\<\
When setting the Option \"ParametrizedValues\" -> True ToTensorOnCurve \
expects vals to be given as parametrized values of the CurveParameter of c.\
\>", "Notes",ExpressionUUID->"8e6a5e86-ae2e-4617-a558-fd5487c3146e"],

Cell["The following options can be given: ", \
"Notes",ExpressionUUID->"d790a70d-deb4-4691-b762-5f57d88a2a83"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "79943127-4d13-4f59-8d8f-7964b9f87b7d"], "ParametrizedValues", "False", 
    Cell["\<\
Boolean stating whether the values of the tensor are to be interprested as \
explicitly parametrized.\
\>", "TableText",ExpressionUUID->"ccd3e72a-83cd-4bee-8223-dac29f609fd2"]}
  },
  GridBoxAlignment->{
   "Columns" -> {Left, Left, {Left}}, "ColumnsIndexed" -> {}, 
    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True}}}},ExpressionUUID->"75d00ec1-3a2c-4560-8b2b-8271d19b6b2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Examples"}], 
        "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0,
 CellTags->
  "PrimaryExamplesSection",ExpressionUUID->"71686bd1-829e-434f-97af-\
da8c3c286afd"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(7)", "ExampleCount",ExpressionUUID->
  "c7867577-bcd1-4622-874a-e1e66280e848"]
}], "ExampleSection",ExpressionUUID->"a6f15aa5-201d-4ef8-8805-102dba1ed6ef"],

Cell[CellGroupData[{

Cell["gK = ToMetric[\"Kerr\"]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"da65a158-129a-434f-94e6-c90e9189d6f3"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"f50438ca-bddd-46ce-9dec-0ea073395c8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
c1 = ToCurve[\"x1\", gK, {t[\[Chi]], (p M)/(1 + e Cos[\[Chi]]), \[Pi]/2, \
\[Phi][\[Chi]]}, \[Chi]]\
\>", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"90d8842c-b97e-42b0-93cf-d4a5931b66a2"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Chi]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"e725ec61-b951-4a15-8cbc-b92da8c28903"]
}, Open  ]],

Cell[CellGroupData[{

Cell["gKC = ToTensorOnCurve[gK, c1]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"aec28084-0ca7-49e1-a42b-a4dcb7b1c400"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""], "[", "\<\"\[Chi]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"5f0d55e3-fe74-4c75-99fe-2667103ef438"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RawTensorValues[gKC]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"70b45584-c14e-4d3e-8bda-80683c2cc7c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "+", 
       RowBox[{"2", " ", "M", " ", "r"}], "-", 
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", "0",
      ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], "-", 
       RowBox[{"2", " ", "M", " ", "r"}], "+", 
       SuperscriptBox["r", "2"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["r", "2"], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ",", "0", ",", 
     "0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "-", 
            RowBox[{"2", " ", "M", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"9d364e3e-5948-4c43-a676-8b6e5f34260e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["vals = TensorValues[gKC]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"ae7f14f7-f3c1-400c-883c-356a26393ee2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["p", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"e", " ", 
               RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]]}], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["M", "2"], " ", "p"}], 
          RowBox[{"1", "+", 
           RowBox[{"e", " ", 
            RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}]]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["M", "2"], " ", 
       SuperscriptBox["p", "2"]}]], ",", "0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}]}], "p"]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["M", "2"], " ", 
       SuperscriptBox["p", "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["M", "2"], " ", 
           SuperscriptBox["p", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"e", " ", 
              RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["M", "2"], " ", "p"}], 
          RowBox[{"1", "+", 
           RowBox[{"e", " ", 
            RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}]]}], ")"}]}]], ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["M", "2"], " ", 
       SuperscriptBox["p", "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"e", " ", 
          RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]], ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}]}], "p"]}], ",", "0",
      ",", "0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["M", "2"], " ", 
              SuperscriptBox["p", "2"]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"e", " ", 
                 RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]]}], 
           ")"}], "2"], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["M", "2"], " ", 
              SuperscriptBox["p", "2"]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"e", " ", 
                 RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["M", "2"], " ", "p"}], 
             RowBox[{"1", "+", 
              RowBox[{"e", " ", 
               RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}]]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["M", "2"], " ", 
       SuperscriptBox["p", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"231989a3-778f-49ac-b0c3-137ce7ce0cdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
gKC2 = ToTensorOnCurve[\"gCurve\", c1, vals, {-\[Alpha], -\[Beta]}, \
\"ParametrizedValues\" -> True]\
\>", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"82f792a9-d256-4e9d-8d8f-19baf0b7237c"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["gCurve", "\[Alpha]\[Beta]", ""], "[", "\<\"\[Chi]\"\>", 
   "]"}],
  DisplayForm]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"d5d2c8b4-d1bc-4fec-86d9-9b747ed7dbed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RawTensorValues[gKC2]", "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"027bbe50-66f4-4097-bc3c-c04169a0e7eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["M", "2"], " ", 
            SuperscriptBox["p", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"e", " ", 
               RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]]}], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["M", "2"], " ", "p"}], 
          RowBox[{"1", "+", 
           RowBox[{"e", " ", 
            RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}]]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["M", "2"], " ", 
       SuperscriptBox["p", "2"]}]], ",", "0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}]}], "p"]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["M", "2"], " ", 
       SuperscriptBox["p", "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["M", "2"], " ", 
           SuperscriptBox["p", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"e", " ", 
              RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["M", "2"], " ", "p"}], 
          RowBox[{"1", "+", 
           RowBox[{"e", " ", 
            RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}]]}], ")"}]}]], ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["M", "2"], " ", 
       SuperscriptBox["p", "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"e", " ", 
          RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]], ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}]}], "p"]}], ",", "0",
      ",", "0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"e", " ", 
           RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["M", "2"], " ", 
              SuperscriptBox["p", "2"]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"e", " ", 
                 RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]]}], 
           ")"}], "2"], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["M", "2"], " ", 
              SuperscriptBox["p", "2"]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"e", " ", 
                 RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["M", "2"], " ", "p"}], 
             RowBox[{"1", "+", 
              RowBox[{"e", " ", 
               RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}]]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["M", "2"], " ", 
       SuperscriptBox["p", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1]:= ",ExpressionUUID->"0820ce0d-7674-4fa7-8cf7-1c167f532307"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "See Also"}], "SeeAlsoSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"2fec3897-efdf-4bfd-9038-44fd410c12d0"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToMetric",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/ToMetric"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "bd46206d-e6f2-47af-85d3-d91f2ab81172"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToTensor",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/ToTensor"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "c5d365ef-9489-4415-869f-75a46ec9cf5a"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["TensorValues",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/TensorValues"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "4226d538-2b25-4e29-9bcf-0efb7af5161e"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["RawTensorValues",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/RawTensorValues"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "343b0ae4-a3cf-464d-b104-7fcc088821a1"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ToCurve",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/ToCurve"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "fe95ff8f-d9d1-4bed-8bfc-accfe069c193"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["Curve",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/Curve"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "6e970ae5-80eb-4cde-81f1-bf8bf1b02c41"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["CurveQ",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/CurveQ"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "b49fab06-a4ff-40a5-919d-604db00072e6"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["OnCurveQ",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/OnCurveQ"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "a6e72731-20e0-428d-943b-f4c2233f3d72"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ParametrizedValuesQ",
    BaseStyle->"Link",
    ButtonData->"paclet:Tensors/ref/ParametrizedValuesQ"],
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "ea10fb33-3338-46bd-a7ba-5db11a2eba8b"]
}], "SeeAlso",ExpressionUUID->"4510a7e0-3b57-4f93-bf85-8336c31ead67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"5ebee30e-6958-4f18-a1f6-71290e242e7c"],

Cell[BoxData[""],ExpressionUUID->"67c25a7e-63c3-482c-991c-5567b5c3b4c5"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ToTensorOnCurve",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "Tensors`", 
    "keywords" -> {"ToTensorOnCurve", "TOTENSORONCURVE", "totensoroncurve"}, 
    "index" -> True, "label" -> "Tensors/Tensors`TensorDefinitions Symbol", 
    "language" -> "en", "paclet" -> "Tensors`TensorDefinitions", "status" -> 
    "None", "summary" -> 
    "ToTensorOnCurve[t,c] returns the Tensor t evaluated on the curve c.\n\
ToTensorOnCurve[n,c,vals,inds] returns a Tensor with indices inds and \
TensorName n and values vals evaluated on the curve c.\n\
ToTensorOnCurve[n,c,vals] is equivalent, but assumes all contravarient \
indices.", 
    "synonyms" -> {"ToTensorOnCurve", "TOTENSORONCURVE", "totensoroncurve"}, 
    "title" -> "ToTensorOnCurve", "windowTitle" -> "ToTensorOnCurve", "type" -> 
    "Symbol", "uri" -> "Tensors/ref/ToTensorOnCurve", "WorkflowDockedCell" -> 
    ""}, "SearchTextTranslated" -> "", "LinkTrails" -> "", "NewStyles" -> 
  False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

