Notebook[{
Cell[" ", "SymbolColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 
   0}},ExpressionUUID->"7bcce111-64d6-43d8-97ee-08c3c12cee0c"],

Cell[TextData[{
 ButtonBox["GeneralRelativityTensors",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["GeneralRelativityTensors`TensorDefinitions",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->
   "paclet:GeneralRelativityTensors/guide/GeneralRelativityTensors`\
TensorDefinitions"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["ValidateTensorExpression",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:GeneralRelativityTensors/ref/ValidateTensorExpression"]
}], "LinkTrail",ExpressionUUID->"675d81cb-668c-4375-be7e-4700dd933508"],

Cell[BoxData[GridBox[{
   {Cell["GENERALRELATIVITYTENSORS`TENSORDEFINITIONS PACLET SYMBOL", 
     "PacletNameCell",ExpressionUUID->"7713d0b7-f1ce-49d9-ac75-dc2edc3bd528"],
     Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Tutorials \[RightGuillemet]\"\>",
        StripOnInput->False], {
       RowBox[{"Introduction", " ", "to", " ", "GeneralRelativityTensors"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Introduction to \
GeneralRelativityTensors"], 
       RowBox[{
       "Manipulating", " ", "and", " ", "differentiating", " ", "Tensors"}]:>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/tutorial/Manipulating and \
differentiating Tensors"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "4d0a74bd-b5d8-4471-8a2a-3b7a2dd23d79"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"ValidTensorExpressionQ":>
       Documentation`HelpLookup[
       "paclet:GeneralRelativityTensors/ref/ValidTensorExpressionQ"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a0fbf698-3a85-4400-bc1a-9003c0e8eb8f"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"
    }], "AnchorBar",ExpressionUUID->"e59bf63f-f508-4137-acb1-c871706c3cde"]}
  }]], "AnchorBarGrid",ExpressionUUID->"f6cfe34f-e961-414a-8702-8a53e6d4d849"],

Cell[CellGroupData[{

Cell["ValidateTensorExpression", \
"ObjectName",ExpressionUUID->"816af583-506b-4f57-9bdc-3069fadbd5ce"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["ValidateTensorExpression",
        BaseStyle->"Link",
        ButtonData->
         "paclet:GeneralRelativityTensors/ref/ValidateTensorExpression"], "[", 
       StyleBox["expr", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "f4afcca7-2b69-4a41-ac38-f1645969723f"],
     "\[LineSeparator]checks whether a Tensor expression is valid and prints \
an error message and aborts if it is not."
    }],ExpressionUUID->"a4b7875c-0a14-4390-bc74-609f7fb7f08d"]}
  }]], "Usage",ExpressionUUID->"51badcbd-823c-49c7-96b3-fa5a4c635f2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Details and Options"}], 
        "NotesSection"], Appearance -> {Automatic, None}, BaseStyle -> None, 
       ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
       None, Method -> "Preemptive"]]], None}, {None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"92c4e186-4fa1-4a5a-8558-ffea8c3440f8"],

Cell["\<\
ValidateTensorExpression does nothing if the expression is valid.\
\>", "Notes",ExpressionUUID->"9ab2ee65-d622-499a-aba1-28185a0b6c0e"],

Cell["\<\
As a test for validity, use ValidTensorExpressionQ, which returns True/False.\
\
\>", "Notes",ExpressionUUID->"c93c7294-f76b-43a0-b203-9b4c4684524e"],

Cell["Null", "Notes",ExpressionUUID->"c4b31506-d67a-447f-9e3a-d1ac452681b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "PrimaryExamplesSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Examples"}], 
        "PrimaryExamplesSection", CellTags -> "PrimaryExamplesSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0,
 CellTags->
  "PrimaryExamplesSection",ExpressionUUID->"bd8b41bf-786a-45dc-88b2-\
4bc1d7f196ba"],

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(0)", "ExampleCount",ExpressionUUID->
  "c59b4fb5-c76e-437d-9071-60ac3a2702df"]
}], "ExampleSection",ExpressionUUID->"3643d092-cc25-4ad5-a816-fc313a7f7f42"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SeeAlsoSection",
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "See Also"}], "SeeAlsoSection"], 
       BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None, 
       Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"0416e1cd-141e-4884-b58d-c100c8016c5d"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["ValidTensorExpressionQ",
    BaseStyle->"Link",
    ButtonData->"paclet:GeneralRelativityTensors/ref/ValidTensorExpressionQ"],
   
   FontFamily->"Verdana"]], "InlineFormula",ExpressionUUID->
  "e58d9277-be6b-4ffe-9aa2-f67865859385"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " "
}], "SeeAlso",ExpressionUUID->"118599e9-f320-48f2-86c2-08d9c4d2de06"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "TutorialsSection",
 WholeCellGroupOpener->True,
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "TUTORIALS", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "TutorialsSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            TemplateBox[{24}, "Spacer1"]]], "Tutorials"}], 
        "TutorialsSection"], BaseStyle -> None, 
       Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
       "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->
  0,ExpressionUUID->"abdf29f0-4dee-4d37-b176-9e92181e716e"],

Cell[TextData[ButtonBox["Introduction to GeneralRelativityTensors",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Introduction to \
GeneralRelativityTensors"]], \
"Tutorials",ExpressionUUID->"ffbf457c-ba4b-4971-9671-37064420e890"],

Cell[TextData[ButtonBox["Manipulating and differentiating Tensors",
 BaseStyle->"Link",
 ButtonData->
  "paclet:GeneralRelativityTensors/tutorial/Manipulating and differentiating \
Tensors"]], "Tutorials",ExpressionUUID->"5d8842ff-441c-4d37-8885-e6fe8d94835b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "FooterCell",ExpressionUUID->"072545cc-0e60-41e8-ab90-699f13de9a8e"],

Cell[BoxData[""],ExpressionUUID->"8589e570-9c47-4f84-8507-1bf77c039d2d"]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ValidateTensorExpression",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "GeneralRelativityTensors`", 
    "keywords" -> {
     "ValidateTensorExpression", "VALIDATETENSOREXPRESSION", 
      "validatetensorexpression"}, "index" -> True, "label" -> 
    "GeneralRelativityTensors/GeneralRelativityTensors`TensorDefinitions \
Symbol", "language" -> "en", "paclet" -> 
    "GeneralRelativityTensors`TensorDefinitions", "status" -> "None", 
    "summary" -> 
    "ValidateTensorExpression[expr] checks whether a Tensor expression is \
valid and prints an error message and aborts if it is not.", 
    "synonyms" -> {
     "ValidateTensorExpression", "VALIDATETENSOREXPRESSION", 
      "validatetensorexpression"}, "title" -> "ValidateTensorExpression", 
    "windowTitle" -> "ValidateTensorExpression", "type" -> "Symbol", "uri" -> 
    "GeneralRelativityTensors/ref/ValidateTensorExpression", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> "", "LinkTrails" -> 
  "", "NewStyles" -> False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

