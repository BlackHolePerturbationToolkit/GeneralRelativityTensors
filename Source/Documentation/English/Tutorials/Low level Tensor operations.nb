Notebook[{

Cell[CellGroupData[{
Cell["GeneralRelativityTensors - Low-level Tensor operations", \
"Title",ExpressionUUID->"12b142e4-000a-4ed2-b4cf-622cbb9792db"],

Cell["\<\
At times GeneralRelativityTensors may not include all the functionality you \
are looking for. In such times, you can always use low-level functions to \
modify Tensors \[OpenCurlyQuote]by hand\[CloseCurlyQuote].\
\>", "Text",ExpressionUUID->"b06e85c2-87b9-40db-926c-ec36ef44e111"],

Cell[BoxData[
 RowBox[{"<<", "GeneralRelativityTensors`"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"844dcd37-b2b9-408e-9a3e-d27bbdb36126"],

Cell[CellGroupData[{

Cell["Warning", \
"Section",ExpressionUUID->"2003d6c2-0430-47d8-9803-e318a3f181b2"],

Cell[CellGroupData[{

Cell["\<\
The functions documented in this tutorial can change the form of a Tensor at \
a fundamental level. \
\>", "Item",ExpressionUUID->"daadbb61-717d-4081-ab6f-703f34056571"],

Cell["\<\
If care is not taken when using them, other features of \
GeneralRelativityTensors may not work as documented.\
\>", "Item",ExpressionUUID->"356f6520-6382-4408-9c96-ff0deb233c02"],

Cell[TextData[{
 "In most cases it is best to create Tensors, Metrics, and Curves with ",
 ButtonBox["ToTensor",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensor"],
 ", ",
 ButtonBox["ToMetric",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToMetric"],
 ", ",
 ButtonBox["ToCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToCurve"],
 ", ",
 ButtonBox["ToTensorFieldOnCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorFieldOnCurve"],
 " or ",
 ButtonBox["ToTensorOnCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorOnCurve"],
 "."
}], "Item",ExpressionUUID->"5a1851fb-296f-4c21-bb50-61e01618a017"],

Cell["\<\
It is only when the limited scope of these functions fail that the low-level \
functions shown here should be used.\
\>", "Item",ExpressionUUID->"a621a10d-aa17-4785-8fb1-1ccfcfca87fc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The form of Tensors", \
"Section",ExpressionUUID->"3693ac60-0f8d-4bc2-a8c6-896c024a3c6c"],

Cell["\<\
Consider the built in Tensor that is the Kerr metric in Boyer-Lindquist \
coordinates.\
\>", "Item",ExpressionUUID->"3cba3de1-f80f-4e50-915e-4db3ac40aea2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gK", "=", 
  RowBox[{"ToMetric", "[", "\"\<Kerr\>\"", "]"}]}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"3c0fa5ea-7db5-4741-8d95-31b8c23465ef"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"e5a3c16f-a257-4f49-b9cc-ea857786753c"]
}, Open  ]],

Cell["\<\
Underneath it is just a Sequence of Rules wrapped in the Head Tensor.\
\>", "Item",ExpressionUUID->"1d82edef-40a9-411f-82fa-015ecd938106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "@@", "gK"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"f61405b5-b4e2-4d04-9fc1-ac6de217c811"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"AbstractQ\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"Coordinates\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], ",", 
   RowBox[{"\<\"Curve\"\>", "\[Rule]", "Undefined"}], ",", 
   RowBox[{"\<\"CurveParameter\"\>", "\[Rule]", "Undefined"}], ",", 
   RowBox[{"\<\"CurveQ\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"DisplayName\"\>", "\[Rule]", "\<\"g\"\>"}], ",", 
   RowBox[{"\<\"Indices\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Alpha]"}], ",", 
      RowBox[{"-", "\[Beta]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Metric\"\>", "\[Rule]", "\<\"Self\"\>"}], ",", 
   RowBox[{"\<\"MetricQ\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"KerrMetric\"\>"}], ",", 
   RowBox[{"\<\"PossibleIndices\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", "\[Delta]", ",", 
      "\[CurlyEpsilon]", ",", "\[Zeta]", ",", "\[Eta]", ",", "\[Iota]", ",", 
      "\[Kappa]", ",", "\[Lambda]", ",", "\[Mu]", ",", "\[Nu]", ",", "\[Xi]", 
      ",", "\[Omicron]", ",", "\[Rho]", ",", "\[Sigma]", ",", "\[FinalSigma]",
       ",", "\[Upsilon]", ",", "\[CurlyPhi]", ",", "\[Psi]", ",", 
      "\[Omega]"}], "}"}]}], ",", 
   RowBox[{"\<\"Values\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          RowBox[{"2", " ", "M", " ", "r"}], "-", 
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", 
        "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
         RowBox[{
          SuperscriptBox["a", "2"], "-", 
          RowBox[{"2", " ", "M", " ", "r"}], "+", 
          SuperscriptBox["r", "2"]}]], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{
         SuperscriptBox["r", "2"], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
          RowBox[{
           SuperscriptBox["r", "2"], "+", 
           RowBox[{
            SuperscriptBox["a", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ",", "0", 
        ",", "0", ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "+", 
               SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
            RowBox[{
             SuperscriptBox["a", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["a", "2"], "-", 
               RowBox[{"2", " ", "M", " ", "r"}], "+", 
               SuperscriptBox["r", "2"]}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], 
     "}"}]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"ed569e64-481b-4ee2-89df-106e5b5c5148"]
}, Open  ]],

Cell["\<\
We can change the Values (the RHS) of each of these Rules \
\[OpenCurlyQuote]manually\[CloseCurlyQuote] by using the function \
SetTensorKeyValue.\
\>", "Item",ExpressionUUID->"85525f57-7e10-4035-8558-a6f49f212a97"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SetTensorKeyValue",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetTensorKeyValue"], 
     "[", 
     StyleBox[
      RowBox[{"t", ",", "key", ",", "value"}], "TI"], "]"}], 
    RowBox[{
     RowBox[{"The", " ", "Tensor", " ", 
      StyleBox["t",
       FontFamily->"Times",
       FontWeight->"Regular",
       FontSlant->"Italic"], 
      StyleBox[" ",
       FontFamily->"Times",
       FontWeight->"Regular",
       FontSlant->"Italic"], "with", " ", "the", " ", "appropriate", " ", 
      "Rule", " ", "changed", " ", "to", " ", 
      StyleBox["key",
       FontFamily->"Times",
       FontWeight->"Regular",
       FontSlant->"Italic"]}], "\[Rule]", 
     StyleBox["value",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]}
  }]], "DefinitionBox",
 CellID->340746825,ExpressionUUID->"15d92d37-6040-4821-a980-2e9c7cb3a6b3"],

Cell["Here we change the value of \[OpenCurlyDoubleQuote]DisplayName\
\[CloseCurlyDoubleQuote]:", \
"Item",ExpressionUUID->"d067b7c5-a3cf-4ec8-9d9b-d788f3a4ebbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKNew", "=", 
  RowBox[{"SetTensorDisplayName", "[", 
   RowBox[{"gK", ",", "\"\<gKerr\>\""}], "]"}]}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"763a815c-6116-4cce-9721-548e388c783e"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["gKerr", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"4f77bbac-fa92-4b33-aff0-b04b2f1f0dee"]
}, Open  ]],

Cell["This does not change the TensorDisplayName of gK", \
"Item",ExpressionUUID->"491961c5-245a-4ea5-9139-139834961fac"],

Cell[CellGroupData[{

Cell[BoxData["gK"], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"e51bdc72-6a73-4e55-8e29-2af73cc0dae4"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"d48a0f65-4351-429b-8c1b-89320185e225"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Built in \[OpenCurlyDoubleQuote]setter\[CloseCurlyDoubleQuote] \
functions", "Section",ExpressionUUID->"bda70a07-d23d-4274-afd7-4580f0a3d0eb"],

Cell[CellGroupData[{

Cell["Available functions", \
"Subsection",ExpressionUUID->"9468cf8c-5e1a-4dc8-98b6-6c2dad2e0768"],

Cell["\<\
Rather than use SetTensorDisplayName, there are built-in functions that can \
be used for each Tensor key-value pair.\
\>", "Item",ExpressionUUID->"8367f231-c124-49ea-8548-570a27b3023e"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SetTensorName",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetTensorName"], "[", 
     StyleBox[
      RowBox[{"t", ",", "n"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "TensorName", " ", 
     "changed", " ", "to", " ", 
     StyleBox["n",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetTensorDisplayName",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetTensorDisplayName"],
      "[", 
     StyleBox[
      RowBox[{"t", ",", "n"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "TensorDisplayName",
      " ", "changed", " ", "to", " ", 
     StyleBox["n",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetTensorValues",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetTensorValues"], "[", 
     StyleBox[
      RowBox[{"t", ",", "vals"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "internal", " ", 
     "RawTensorValues", " ", "changed", " ", "to", " ", 
     StyleBox["vals",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetMetric",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetMetric"], "[", 
     StyleBox[
      RowBox[{"t", ",", "m"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "metric", " ", 
     "changed", " ", "to", " ", 
     StyleBox["m",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetMetricQ",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetMetricQ"], "[", 
     StyleBox[
      RowBox[{"t", ",", "bool"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "MetricQ", " ", 
     "flag", " ", "set", " ", "to", " ", 
     StyleBox["bool",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetCurve",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetCurve"], "[", 
     StyleBox[
      RowBox[{"t", ",", "c"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "Curve", " ", "set",
      " ", "to", " ", 
     StyleBox["c",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetCurveParameter",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetCurveParameter"], 
     "[", 
     StyleBox[
      RowBox[{"t", ",", "param"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "CurveParameter", 
     " ", "set", " ", "to", " ", 
     StyleBox["param",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetCurveQ",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetCurveQ"], "[", 
     StyleBox[
      RowBox[{"t", ",", "bool"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "CurveQ", " ", 
     "flag", " ", "set", " ", "to", " ", 
     StyleBox["bool",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetCoordinates",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetCoordinates"], "[", 
     
     StyleBox[
      RowBox[{"t", ",", "coords"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "Coordinates", " ", 
     "set", " ", "to", " ", 
     StyleBox["coords",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetIndices",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetIndices"], "[", 
     StyleBox[
      RowBox[{"t", ",", "inds"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "Indices", " ", 
     "set", " ", "to", " ", 
     StyleBox["inds",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["SetPossibleIndices",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetPossibleIndices"], 
     "[", 
     StyleBox[
      RowBox[{"t", ",", "posInds"}], "TI"], "]"}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", "PossibleIndices", 
     " ", "set", " ", "to", " ", 
     StyleBox["posInds",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]},
   {
    RowBox[{
     ButtonBox["",
      BaseStyle->"Link",
      ButtonData->"paclet:GeneralRelativityTensors/ref/SetDimensions"], 
     RowBox[{
      ButtonBox["SetSpacetimeDimensions",
       BaseStyle->"Link",
       ButtonData->
        "paclet:GeneralRelativityTensors/ref/SetSpacetimeDimensions"], "[", 
      StyleBox[
       RowBox[{"t", ",", "dims"}], "TI"], "]"}]}], 
    RowBox[{"The", " ", "Tensor", " ", 
     StyleBox["t",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"], " ", "with", " ", "its", " ", 
     "SpacetimeDimensions", " ", "set", " ", "to", " ", 
     StyleBox["dims",
      FontFamily->"Times",
      FontWeight->"Regular",
      FontSlant->"Italic"]}]}
  }]], "DefinitionBox",
 CellID->1668101314,ExpressionUUID->"5f004377-b91f-4e07-bc8d-4a3e7c77776b"],

Cell[CellGroupData[{

Cell[TextData[{
 "When Tensors are created with ",
 ButtonBox["ToTensor",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensor"],
 ", there are many checks run to check the consistency of the input."
}], "Item",ExpressionUUID->"708f0728-f829-4131-aa3b-fbd2f51b3868"],

Cell["\<\
For instance, the number of SpacetimeDimensions of the given Metric must be \
consistent with sizes of Lists of values.\
\>", "Item",ExpressionUUID->"32528419-1a6c-470f-a7a1-e758932eb78f"],

Cell["\<\
By default the functions listed here also perform those checks, which is \
usually a good thing.\
\>", "Item",ExpressionUUID->"b3119a88-c466-47e9-a79b-18969a549cf4"],

Cell["\<\
It is possible to live dangerously, though, and not perform consistency \
checks with the Option IgnoreWarnings \[Rule] True.\
\>", "Item",ExpressionUUID->"57aeead6-4d2c-4741-87b4-8da4cad259aa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Names", \
"Subsection",ExpressionUUID->"51703d5f-a99b-4a1d-96d1-51bfb1cc07cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gK2", "=", 
  RowBox[{"SetTensorName", "[", 
   RowBox[{"gK", ",", "\"\<Kerr2\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gK2", "//", "TensorName"}]}], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"d21adfcd-80b1-43dd-8dde-ac7ba2c5fafd"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"90d03f1b-e37d-454c-8367-f84da2b68fab"],

Cell[BoxData["\<\"Kerr2\"\>"], "Output",
 CellLabel->
  "Out[20]=",ExpressionUUID->"6b250565-d9bd-4bc1-90a3-79935129b4f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetTensorDisplayName", "[", 
  RowBox[{"gK", ",", "\"\<\[ScriptG]\>\""}], "]"}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"9bedc5ba-1a47-4cfa-9c76-f03bd650719f"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["\[ScriptG]", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[18]=",ExpressionUUID->"ca169f5a-c7cd-47ea-8ea0-30bf9c7ee744"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Values", \
"Subsection",ExpressionUUID->"4daad241-c322-4f06-a80b-4631bfa9c97c"],

Cell["\<\
When SetTensorValues is called, all cached values associated with that Tensor \
are cleared.\
\>", "Item",ExpressionUUID->"1c041f76-2cc4-4a3f-8636-50e5c1e45ae0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TensorValues", "[", "gK", "]"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"8e9097f9-5255-4172-849b-25abc4cdce60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "+", 
       RowBox[{"2", " ", "M", " ", "r"}], "-", 
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", "0",
      ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       SuperscriptBox["a", "2"], "-", 
       RowBox[{"2", " ", "M", " ", "r"}], "+", 
       SuperscriptBox["r", "2"]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["r", "2"], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "a", " ", "M", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ",", "0", ",", 
     "0", ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}], "2"], "-", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "-", 
            RowBox[{"2", " ", "M", " ", "r"}], "+", 
            SuperscriptBox["r", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[21]=",ExpressionUUID->"0ba26ce8-5a55-4374-98b9-8260600d8b99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gK2s", "=", 
  RowBox[{"SetTensorValues", "[", 
   RowBox[{"gK", ",", 
    RowBox[{"Table", "[", 
     RowBox[{"2", ",", 
      RowBox[{"{", "4", "}"}], ",", 
      RowBox[{"{", "4", "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"024da580-606c-4578-9678-5e44c5966ce6"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[26]=",ExpressionUUID->"03177725-d170-44c5-a9f2-0add498df6b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RawTensorValues", "[", "gK2s", "]"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"8dd06469-1bc5-4a0f-997b-106f99652a32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[42]=",ExpressionUUID->"a07dc771-1579-4df6-bce5-5969eaf130c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metrics", \
"Subsection",ExpressionUUID->"ef8fe955-1530-48e6-83e7-84c03b364195"],

Cell[CellGroupData[{

Cell["SetMetric", \
"Subsubsection",ExpressionUUID->"8a1bbfb1-52aa-4518-8e62-1fed7e573b99"],

Cell["\<\
In this case, it doesn\[CloseCurlyQuote]t make much sense to change the \
metric, but it is possible.\
\>", "Item",ExpressionUUID->"00def1bd-c7a3-4a2f-8198-281234c91324"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ARN", "=", 
  RowBox[{
  "MaxwellPotential", "[", "\"\<ReissnerNordstrom\>\"", "]"}]}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"e69d55bf-3e7e-44e0-996b-33f1b235f7f1"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["A", "\[Alpha]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[28]=",ExpressionUUID->"52090eff-f4a6-4b41-88df-44d38557c0d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Metric", "[", "ARN", "]"}], "//", "TensorName"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"c1de184d-cd79-45e7-83a5-e2268829b6a1"],

Cell[BoxData["\<\"ReissnerNordstromMetric\"\>"], "Output",
 CellLabel->
  "Out[31]=",ExpressionUUID->"879f44f2-cc70-4c2c-985e-9784e2e900e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AS", "=", 
  RowBox[{"SetMetric", "[", 
   RowBox[{"ARN", ",", 
    RowBox[{"ToMetric", "[", "\"\<Schwarzschild\>\"", "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"7692a51f-54a6-490c-9148-f55536393da2"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["A", "\[Alpha]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[29]=",ExpressionUUID->"9670941c-0e71-47d5-bffe-320da8266c41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Metric", "[", "AS", "]"}], "//", "TensorName"}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"31cd4ed4-61cc-43d8-a156-dc96f6eddce9"],

Cell[BoxData["\<\"SchwarzschildMetric\"\>"], "Output",
 CellLabel->
  "Out[32]=",ExpressionUUID->"8409bc68-9b81-48a2-8172-423bed534d83"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SetMetricQ", \
"Subsubsection",ExpressionUUID->"8ef73e11-1b67-408e-afb4-b5bb7de65293"],

Cell["\<\
The flag MetricQ stores whether a Tensor is a metric. This can be turned on \
and off.\
\>", "Item",ExpressionUUID->"65cf8086-72d8-4a60-8850-31b0a2b6ef66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MetricQ", "[", "gK", "]"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"00864208-7b62-4771-80d4-d1a65ddf7d54"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[33]=",ExpressionUUID->"26d03f5c-9ecc-4296-9566-12f6607eb10a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKFalse", "=", 
  RowBox[{"SetMetricQ", "[", 
   RowBox[{"gK", ",", "False"}], "]"}]}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"73967f6b-6211-4837-8049-c8989abea2a5"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[34]=",ExpressionUUID->"833ec7d7-1177-4ed8-8e4e-69b040d0c5e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MetricQ", "[", "gKFalse", "]"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"67ace4fc-b53d-4080-9969-917d9af38d66"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[35]=",ExpressionUUID->"e4be3d50-73d4-4019-a30d-4359d463f5b1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Curves", \
"Subsection",ExpressionUUID->"61b6bd19-18f8-431d-a9b4-8036c5c9854f"],

Cell[CellGroupData[{

Cell[TextData[{
 "There is a great deal of subtlety about whether a Tensor ",
 StyleBox["is",
  FontSlant->"Italic"],
 " a Curve, ",
 StyleBox["has",
  FontSlant->"Italic"],
 " an associated Curve, or is ",
 StyleBox["on ",
  FontSlant->"Italic"],
 "a Curve."
}], "Item",ExpressionUUID->"119315af-470b-48b5-8291-5c8df4076fa7"],

Cell[TextData[{
 "For this reason, it is almost always preferable to use  ",
 ButtonBox["ToCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToCurve"],
 ", ",
 ButtonBox["ToTensorFieldOnCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorFieldOnCurve"],
 " or ",
 ButtonBox["ToTensorOnCurve",
  BaseStyle->"Link",
  ButtonData->"paclet:GeneralRelativityTensors/ref/ToTensorOnCurve"],
 "."
}], "Item",ExpressionUUID->"8ab90a39-098c-4a0a-b4ca-699702cf2340"],

Cell["\<\
Nonetheless, it is possible to set the internal curve key-values directly.\
\>", "Item",ExpressionUUID->"01c702ce-83b5-4593-9475-47e4363a1c9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SetCurve", \
"Subsubsection",ExpressionUUID->"ff2966ae-d8cd-4885-93a4-f8958c4d58f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1", " ", "=", " ", 
  RowBox[{"ToCurve", "[", 
   RowBox[{"\"\<x1\>\"", ",", " ", "gK", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "[", "\[Chi]", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", " ", "M"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"e", " ", 
          RowBox[{"Cos", "[", "\[Chi]", "]"}]}]}], ")"}]}], ",", " ", 
      RowBox[{"\[Pi]", "/", "2"}], ",", " ", 
      RowBox[{"\[Phi]", "[", "\[Chi]", "]"}]}], "}"}], ",", " ", "\[Chi]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"c7b6a46e-c09a-41b7-a34f-adf95a2f7896"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Chi]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->
  "Out[39]=",ExpressionUUID->"b898d16a-0ade-45ba-a9ec-573c88b57cfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKC", " ", "=", " ", 
  RowBox[{"SetCurve", "[", 
   RowBox[{"gK", ",", " ", "c1"}], "]"}]}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"df7cd554-da31-4bba-a1dc-c37c46246b5c"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[40]=",ExpressionUUID->"8eaa5e03-aa37-43c6-9154-79484c8af8c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curve", "[", "gKC", "]"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"fa63a9d6-2b81-4565-a810-a31911cf0765"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Chi]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->
  "Out[41]=",ExpressionUUID->"752289e9-02a1-40bc-9394-60d56dc574af"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SetCurveParameter", \
"Subsubsection",ExpressionUUID->"825a8f95-ae60-41f3-b32c-b33cc3dbc598"],

Cell["\<\
In this case it does not make much sense to change the CurveParameter, but it \
could be useful if SetTensorValues were also used.\
\>", "Item",ExpressionUUID->"ccb50382-6914-4cf7-933e-7eae0f57e1f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", " ", "=", " ", 
  RowBox[{"SetCurveParameter", "[", 
   RowBox[{"c1", ",", " ", "\[Tau]"}], "]"}]}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"dc81e749-db9a-4dea-92d1-35bbfb0c47a7"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Tau]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->
  "Out[43]=",ExpressionUUID->"1de0158c-80a4-4d37-bde3-c2b8ce4cefb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurveParameter", "[", "c2", "]"}]], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"a3164b56-49dd-4b3b-9254-1985532acfb8"],

Cell[BoxData["\[Tau]"], "Output",
 CellLabel->
  "Out[45]=",ExpressionUUID->"165c6033-5d6b-4699-903e-71539cc706df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SetCurveQ", \
"Subsubsection",ExpressionUUID->"4e177f16-dcca-4f54-822b-779a6f2d0cee"],

Cell["\<\
The flag CurveQ stores whether a Tensor is a Curve. This can be turned on and \
off.\
\>", "Item",ExpressionUUID->"45e04f90-0bb0-4b98-8ba2-bb3464466aac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurveQ", "[", "c2", "]"}]], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"dcc5ce61-f1cf-4727-854a-f1b7369aae5b"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[49]=",ExpressionUUID->"c244d07d-0ec0-4883-9d0f-16612bf30077"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c3", " ", "=", " ", 
  RowBox[{"SetCurveQ", "[", 
   RowBox[{"c2", ",", "False"}], "]"}]}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"a326d020-f886-4951-b4fd-0781ab503393"],

Cell[BoxData[
 TagBox[
  RowBox[{
   SubsuperscriptBox["x1", "", "\[Alpha]"], "[", "\<\"\[Tau]\"\>", "]"}],
  DisplayForm]], "Output",
 CellLabel->
  "Out[50]=",ExpressionUUID->"0abd2532-38e4-4e7b-8456-95991b83690f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurveQ", "[", "c3", "]"}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"90441955-c3be-4d9f-8045-098cbde697d0"],

Cell[BoxData["False"], "Output",
 CellLabel->
  "Out[51]=",ExpressionUUID->"2b790f09-4835-42a0-bfd2-574bd96b9d7e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coordinates, Indices, SpacetimeDimensions", \
"Subsection",ExpressionUUID->"66168d7b-49eb-4ade-862a-fa77da50621b"],

Cell[CellGroupData[{

Cell["Coordinates", \
"Subsubsection",ExpressionUUID->"171730d7-d9e3-4730-9e15-09fd3ee9eea8"],

Cell["We can change the List of Coordinates of a Tensor", \
"Item",ExpressionUUID->"6dcfbf86-1257-488c-ba88-3e5203083577"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gK", "//", "Coordinates"}]], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"02b64085-867f-4185-93d8-98e54dbed459"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]], "Output",
 CellLabel->
  "Out[54]=",ExpressionUUID->"6713668a-ce0a-419c-a2ed-8cc4c0c4a34c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKCart", "=", 
  RowBox[{"SetCoordinates", "[", 
   RowBox[{"gK", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"4ad8bef6-01cf-4e97-99e7-c1497e105aa3"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[52]=",ExpressionUUID->"da76a665-e2a5-470c-93fb-6c34f6f46d3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKCart", "//", "Coordinates"}]], "Input",
 CellLabel->"In[55]:=",ExpressionUUID->"dafeb745-8847-4566-b91e-b04ea2f47109"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellLabel->
  "Out[55]=",ExpressionUUID->"2a704756-d422-45a6-bbea-9a7c3cc6d9f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Indices and PossibleIndices", \
"Subsubsection",ExpressionUUID->"e6b11715-877a-4017-9c06-fb950747b6bf"],

Cell["\<\
These two must be consistent, so without IgnoreWarnings \[Rule] True it fails.\
\>", "Item",ExpressionUUID->"47154bbb-b1e2-47c3-b615-f4d099a837cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetIndices", "[", 
  RowBox[{"gK", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"d7772179-cbca-40d1-9e34-27a3e9f2ec2a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Given Indices \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], 
   "\[InvisibleSpace]", "\<\" are not found in List of with PossibleIndices \
\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", "\[Delta]", ",", 
     "\[CurlyEpsilon]", ",", "\[Zeta]", ",", "\[Eta]", ",", "\[Iota]", ",", 
     "\[Kappa]", ",", "\[Lambda]", ",", "\[Mu]", ",", "\[Nu]", ",", "\[Xi]", 
     ",", "\[Omicron]", ",", "\[Rho]", ",", "\[Sigma]", ",", "\[FinalSigma]", 
     ",", "\[Upsilon]", ",", "\[CurlyPhi]", ",", "\[Psi]", ",", "\[Omega]"}], 
    "}"}]}],
  SequenceForm[
  "Given Indices ", {$CellContext`a, $CellContext`b}, 
   " are not found in List of with PossibleIndices ", {$CellContext`\[Alpha], \
$CellContext`\[Beta], $CellContext`\[Gamma], $CellContext`\[Delta], \
$CellContext`\[CurlyEpsilon], $CellContext`\[Zeta], $CellContext`\[Eta], \
$CellContext`\[Iota], $CellContext`\[Kappa], $CellContext`\[Lambda], \
$CellContext`\[Mu], $CellContext`\[Nu], $CellContext`\[Xi], $CellContext`\
\[Omicron], $CellContext`\[Rho], $CellContext`\[Sigma], $CellContext`\
\[FinalSigma], $CellContext`\[Upsilon], $CellContext`\[CurlyPhi], \
$CellContext`\[Psi], $CellContext`\[Omega]}],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[56]:=",ExpressionUUID->"6efecb77-fb81-4614-806c-5b76db4016d1"],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->
  "Out[56]=",ExpressionUUID->"b8ee2d21-2113-4dab-bc43-5320fa83fdd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKLatin1", "=", 
  RowBox[{"SetIndices", "[", 
   RowBox[{"gK", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "a"}], ",", 
      RowBox[{"-", "b"}]}], "}"}], ",", 
    RowBox[{"IgnoreWarnings", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"90538254-f812-4708-ac90-928d1c37dc83"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "ab", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[59]=",ExpressionUUID->"60b9f9cc-a240-4960-8ec5-2f3bdd61bb70"]
}, Open  ]],

Cell["Still, normal things don\[CloseCurlyQuote]t work:", \
"Item",ExpressionUUID->"9e938538-794d-4784-a98f-44383c189d6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKLatin1", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"9145dcbb-a871-4f29-a7d5-a87ccafa3574"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The given indices \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], 
   "\[InvisibleSpace]", "\<\" are not entirely in the List of \
PossibleIndices, or Coordinates of \"\>", "\[InvisibleSpace]", 
   TagBox[
    SubsuperscriptBox["g", "ab", ""],
    DisplayForm], 
   "\[InvisibleSpace]", "\<\", and they are not not all Patterns.\"\>"}],
  SequenceForm[
  "The given indices ", {$CellContext`a, $CellContext`b}, 
   " are not entirely in the List of PossibleIndices, or Coordinates of ", 
   GeneralRelativityTensors`TensorDefinitions`Tensor[{
    "AbstractQ" -> False, 
     "Coordinates" -> {$CellContext`t, $CellContext`r, $CellContext`\[Theta], \
$CellContext`\[Phi]}, "Curve" -> Undefined, "CurveParameter" -> Undefined, 
     "CurveQ" -> False, "Dimensions" -> 4, "DisplayName" -> "g", 
     "Indices" -> {-$CellContext`a, -$CellContext`b}, "Metric" -> "Self", 
     "MetricQ" -> True, "Name" -> "KerrMetric", 
     "PossibleIndices" -> {$CellContext`\[Alpha], $CellContext`\[Beta], \
$CellContext`\[Gamma], $CellContext`\[Delta], $CellContext`\[CurlyEpsilon], \
$CellContext`\[Zeta], $CellContext`\[Eta], $CellContext`\[Iota], \
$CellContext`\[Kappa], $CellContext`\[Lambda], $CellContext`\[Mu], \
$CellContext`\[Nu], $CellContext`\[Xi], $CellContext`\[Omicron], \
$CellContext`\[Rho], $CellContext`\[Sigma], $CellContext`\[FinalSigma], \
$CellContext`\[Upsilon], $CellContext`\[CurlyPhi], $CellContext`\[Psi], \
$CellContext`\[Omega]}, 
     "Values" -> {{($CellContext`r^2 + $CellContext`a^2 
           Cos[$CellContext`\[Theta]]^2)^(-1) (-$CellContext`a^2 + (
           2 $CellContext`M) $CellContext`r - $CellContext`r^2 + \
$CellContext`a^2 Sin[$CellContext`\[Theta]]^2), 0, 
        0, (((((-2) $CellContext`a) $CellContext`M) \
$CellContext`r)/($CellContext`r^2 + $CellContext`a^2 
          Cos[$CellContext`\[Theta]]^2)) Sin[$CellContext`\[Theta]]^2}, {
       0, ($CellContext`a^2 - (
           2 $CellContext`M) $CellContext`r + $CellContext`r^2)^(-1) \
($CellContext`r^2 + $CellContext`a^2 Cos[$CellContext`\[Theta]]^2), 0, 0}, {
       0, 0, $CellContext`r^2 + $CellContext`a^2 Cos[$CellContext`\[Theta]]^2,
         0}, {(((((-2) $CellContext`a) $CellContext`M) \
$CellContext`r)/($CellContext`r^2 + $CellContext`a^2 
          Cos[$CellContext`\[Theta]]^2)) Sin[$CellContext`\[Theta]]^2, 0, 
        0, (($CellContext`r^2 + $CellContext`a^2 
            Cos[$CellContext`\[Theta]]^2)^(-1) 
         Sin[$CellContext`\[Theta]]^2) (($CellContext`a^2 + \
$CellContext`r^2)^2 - ($CellContext`a^2 ($CellContext`a^2 - (
            2 $CellContext`M) $CellContext`r + $CellContext`r^2)) 
         Sin[$CellContext`\[Theta]]^2)}}}], 
   ", and they are not not all Patterns."],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[60]:=",ExpressionUUID->"cbd74011-954a-4e37-8fde-32c07b5c428c"],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->
  "Out[60]=",ExpressionUUID->"ab6187d3-29c1-4143-8931-3da7c331c3c4"]
}, Open  ]],

Cell["So, we have to also set PossibleIndices", \
"Item",ExpressionUUID->"eeef9408-cb26-4af9-856d-49c426fd6c9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKLatin2", "=", 
  RowBox[{"SetPossibleIndices", "[", 
   RowBox[{"gKLatin1", ",", 
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
      "h", ",", "i", ",", "j"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"045c2259-2452-4ec8-8eca-095b3bf843b6"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "ab", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[62]=",ExpressionUUID->"b299836c-f43b-404a-89c5-daf7cf248172"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gKLatin2", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"b50bb805-3015-4b45-84d8-dc4a00eeae09"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "", "ab"],
  DisplayForm]], "Output",
 CellLabel->
  "Out[63]=",ExpressionUUID->"2a3b1fd7-22fd-498f-9d7d-a8f876220cae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SpacetimeDimensions", \
"Subsubsection",ExpressionUUID->"869b0552-2d3e-440b-a7ed-5b5d73010f81"],

Cell["\<\
This should only be changed if Coordinates and TensorValues are changed \
consistently.\
\>", "Item",ExpressionUUID->"537a0314-8340-4dd0-8751-570acd99dcde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetSpacetimeDimensions", "[", 
  RowBox[{"gK", ",", "3"}], 
  "]"}]], "Input",ExpressionUUID->"3e888922-6973-4e78-88f6-cb11703d0ead"],

Cell[BoxData["\<\"The number of coordinates given does not match the number \
of dimensions.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"70c503bc-19a9-44bd-91f0-c221a3eb9690"],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->
  "Out[64]=",ExpressionUUID->"3104735a-88d2-47ba-b1df-01d87a1adf79"]
}, Open  ]],

Cell["Still, it is possible:", \
"Item",ExpressionUUID->"d20edece-e4c6-493b-96cf-16d4338a94ad"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"3", ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"9926a4eb-5be6-4673-9d40-65d353791e54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gK3", "=", 
  RowBox[{"SetTensorValues", "[", 
   RowBox[{
    RowBox[{"SetCoordinates", "[", 
     RowBox[{
      RowBox[{"SetSpacetimeDimensions", "[", 
       RowBox[{"gK", ",", "3", ",", 
        RowBox[{"IgnoreWarnings", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "x", ",", "y"}], "}"}], ",", 
      RowBox[{"IgnoreWarnings", "\[Rule]", "True"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{"3", ",", 
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "]"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"2e7d482c-39bd-4fd3-a0c2-6ebd286c07ee"],

Cell[BoxData[
 TagBox[
  SubsuperscriptBox["g", "\[Alpha]\[Beta]", ""],
  DisplayForm]], "Output",
 CellLabel->
  "Out[69]=",ExpressionUUID->"4b1e5693-d455-4774-aea4-cf98f96b5c54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SpacetimeDimensions", "[", "gK3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Coordinates", "[", "gK3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"TensorValues", "[", "gK3", 
  "]"}]}], "Input",ExpressionUUID->"37f4da66-5805-48a9-bbf9-571d6bad2cad"],

Cell[BoxData["3"], "Output",
 CellLabel->"Out[70]=",ExpressionUUID->"ed0452c3-59cb-49d3-81b7-7d762cf4bde9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", "x", ",", "y"}], "}"}]], "Output",
 CellLabel->"Out[71]=",ExpressionUUID->"ad65f63b-e743-4f8d-be6f-0b94731de5e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[72]=",ExpressionUUID->"8e871f7f-0d8f-41cb-8117-8bbc422be1df"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 805},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
FrontEndVersion->"10.2 for Mac OS X x86 (64-bit) (July 14, 2015)",
StyleDefinitions->"Default.nb",
$CellContext`TrackCellChangeTimes -> False,
ExpressionUUID->"484189c7-1239-4a58-8a36-7ac73e012083"
]

